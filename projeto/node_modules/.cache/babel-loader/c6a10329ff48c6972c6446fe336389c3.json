{"ast":null,"code":"var _jsxFileName = \"/home/pierre/Documentos/projects/Q2/sprint6/icash/src/components/ModalReport/index.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { ContainerModal, ContainerReporter, Graphic, ReporterWritten } from \"./styles\";\nimport { Bar } from \"react-chartjs-2\";\nimport { FaRegWindowClose } from \"react-icons/fa\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst data = {\n  labels: [\"Jan\", \"Fev\", \"Mar\", \"Abr\", \"Mai\", \"Jun\"],\n  datasets: [{\n    label: \"# Total de Pedidos\",\n    data: [12, 19, 14, 15, 8, 9],\n    backgroundColor: \"rgb(255, 99, 132)\"\n  }, {\n    label: \"# Pedidos Finalizados\",\n    data: [8, 10, 11, 7, 4, 5],\n    backgroundColor: \"rgb(54, 162, 235)\"\n  }, {\n    label: \"# Cashback fornecido\",\n    data: [3, 4, 5, 2, 1, 3],\n    backgroundColor: \"rgb(45, 116, 116)\"\n  }]\n};\nconst options = {\n  scales: {\n    yAxes: [{\n      ticks: {\n        beginAtZero: true\n      }\n    }]\n  }\n};\n\nconst ModalReport = () => {\n  _s();\n\n  const [isModal, setIsModal] = useState(false);\n\n  const handleClose = () => {\n    setIsModal(false);\n    console.log(isModal);\n  };\n\n  return /*#__PURE__*/_jsxDEV(ContainerReporter, {\n    children: /*#__PURE__*/_jsxDEV(ContainerModal, {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleClose,\n        children: /*#__PURE__*/_jsxDEV(FaRegWindowClose, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [\"Relat\\xF3rios da loja: \", \"loja1\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Graphic, {\n        children: /*#__PURE__*/_jsxDEV(Bar, {\n          data: data,\n          options: options\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ReporterWritten, {\n        children: /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: [/*#__PURE__*/_jsxDEV(\"li\", {\n            children: \"Total de Pedidos: aqui vai os dados vindos da api\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: \"Total de Pedidos finalizados: aqui vai os dados vindos da api\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: \"Cashback gerado: aqui vai os dados vindos da api\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ModalReport, \"cOXKGbUwrDMC92fa+dqhHc2O4Qw=\");\n\n_c = ModalReport;\nexport default ModalReport;\n\nvar _c;\n\n$RefreshReg$(_c, \"ModalReport\");","map":{"version":3,"sources":["/home/pierre/Documentos/projects/Q2/sprint6/icash/src/components/ModalReport/index.tsx"],"names":["React","useState","ContainerModal","ContainerReporter","Graphic","ReporterWritten","Bar","FaRegWindowClose","data","labels","datasets","label","backgroundColor","options","scales","yAxes","ticks","beginAtZero","ModalReport","isModal","setIsModal","handleClose","console","log"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SACEC,cADF,EAEEC,iBAFF,EAGEC,OAHF,EAIEC,eAJF,QAKO,UALP;AAMA,SAASC,GAAT,QAAoB,iBAApB;AACA,SAASC,gBAAT,QAAiC,gBAAjC;;AAEA,MAAMC,IAAI,GAAG;AACXC,EAAAA,MAAM,EAAE,CAAC,KAAD,EAAQ,KAAR,EAAe,KAAf,EAAsB,KAAtB,EAA6B,KAA7B,EAAoC,KAApC,CADG;AAEXC,EAAAA,QAAQ,EAAE,CACR;AACEC,IAAAA,KAAK,EAAE,oBADT;AAEEH,IAAAA,IAAI,EAAE,CAAC,EAAD,EAAK,EAAL,EAAS,EAAT,EAAa,EAAb,EAAiB,CAAjB,EAAoB,CAApB,CAFR;AAGEI,IAAAA,eAAe,EAAE;AAHnB,GADQ,EAMR;AACED,IAAAA,KAAK,EAAE,uBADT;AAEEH,IAAAA,IAAI,EAAE,CAAC,CAAD,EAAI,EAAJ,EAAQ,EAAR,EAAY,CAAZ,EAAe,CAAf,EAAkB,CAAlB,CAFR;AAGEI,IAAAA,eAAe,EAAE;AAHnB,GANQ,EAWR;AACED,IAAAA,KAAK,EAAE,sBADT;AAEEH,IAAAA,IAAI,EAAE,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV,EAAa,CAAb,EAAgB,CAAhB,CAFR;AAGEI,IAAAA,eAAe,EAAE;AAHnB,GAXQ;AAFC,CAAb;AAqBA,MAAMC,OAAO,GAAG;AACdC,EAAAA,MAAM,EAAE;AACNC,IAAAA,KAAK,EAAE,CACL;AACEC,MAAAA,KAAK,EAAE;AACLC,QAAAA,WAAW,EAAE;AADR;AADT,KADK;AADD;AADM,CAAhB;;AAWA,MAAMC,WAAW,GAAG,MAAM;AAAA;;AACxB,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBnB,QAAQ,CAAC,KAAD,CAAtC;;AAEA,QAAMoB,WAAW,GAAG,MAAM;AACxBD,IAAAA,UAAU,CAAC,KAAD,CAAV;AACAE,IAAAA,OAAO,CAACC,GAAR,CAAYJ,OAAZ;AACD,GAHD;;AAIA,sBACE,QAAC,iBAAD;AAAA,2BACE,QAAC,cAAD;AAAA,8BACE;AAAQ,QAAA,OAAO,EAAEE,WAAjB;AAAA,+BACE,QAAC,gBAAD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cADF,eAIE;AAAA,8CAAyB,OAAzB;AAAA;AAAA;AAAA;AAAA;AAAA,cAJF,eAKE,QAAC,OAAD;AAAA,+BACE,QAAC,GAAD;AAAK,UAAA,IAAI,EAAEb,IAAX;AAAiB,UAAA,OAAO,EAAEK;AAA1B;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cALF,eAQE,QAAC,eAAD;AAAA,+BACE;AAAA,kCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFF,eAKE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBALF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cARF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAsBD,CA7BD;;GAAMK,W;;KAAAA,W;AA+BN,eAAeA,WAAf","sourcesContent":["import React, { useState } from \"react\";\nimport {\n  ContainerModal,\n  ContainerReporter,\n  Graphic,\n  ReporterWritten,\n} from \"./styles\";\nimport { Bar } from \"react-chartjs-2\";\nimport { FaRegWindowClose } from \"react-icons/fa\";\n\nconst data = {\n  labels: [\"Jan\", \"Fev\", \"Mar\", \"Abr\", \"Mai\", \"Jun\"],\n  datasets: [\n    {\n      label: \"# Total de Pedidos\",\n      data: [12, 19, 14, 15, 8, 9],\n      backgroundColor: \"rgb(255, 99, 132)\",\n    },\n    {\n      label: \"# Pedidos Finalizados\",\n      data: [8, 10, 11, 7, 4, 5],\n      backgroundColor: \"rgb(54, 162, 235)\",\n    },\n    {\n      label: \"# Cashback fornecido\",\n      data: [3, 4, 5, 2, 1, 3],\n      backgroundColor: \"rgb(45, 116, 116)\",\n    },\n  ],\n};\n\nconst options = {\n  scales: {\n    yAxes: [\n      {\n        ticks: {\n          beginAtZero: true,\n        },\n      },\n    ],\n  },\n};\nconst ModalReport = () => {\n  const [isModal, setIsModal] = useState(false);\n\n  const handleClose = () => {\n    setIsModal(false);\n    console.log(isModal);\n  };\n  return (\n    <ContainerReporter>\n      <ContainerModal>\n        <button onClick={handleClose}>\n          <FaRegWindowClose />\n        </button>\n        <h2>Relat√≥rios da loja: {\"loja1\"}</h2>\n        <Graphic>\n          <Bar data={data} options={options} />\n        </Graphic>\n        <ReporterWritten>\n          <ul>\n            <li>Total de Pedidos: aqui vai os dados vindos da api</li>\n            <li>\n              Total de Pedidos finalizados: aqui vai os dados vindos da api\n            </li>\n            <li>Cashback gerado: aqui vai os dados vindos da api</li>\n          </ul>\n        </ReporterWritten>\n      </ContainerModal>\n    </ContainerReporter>\n  );\n};\n\nexport default ModalReport;\n"]},"metadata":{},"sourceType":"module"}