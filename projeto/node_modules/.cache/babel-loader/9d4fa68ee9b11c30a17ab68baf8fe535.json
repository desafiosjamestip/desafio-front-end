{"ast":null,"code":"var _jsxFileName = \"/home/pierre/Documentos/projects/Q2/sprint6/icash/src/providers/UserProvider/index.tsx\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport { createContext, useCallback, useContext, useEffect, useState } from \"react\";\nimport api from \"../../services/api\";\nimport toast from \"react-hot-toast\";\nimport axios from \"axios\";\nimport { useAuth } from \"../Auth\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst UserContext = /*#__PURE__*/createContext({});\nexport const UserDataProvider = ({\n  children\n}) => {\n  _s();\n\n  const token = localStorage.getItem(\"@iCash:token\") || \"\";\n  const [user, setUser] = useState({});\n  const {\n    login\n  } = useAuth();\n  const UpdateUser = useCallback((data, userId) => {\n    axios.patch(`https://api-icash.herokuapp.com/users/${userId}`, data, {\n      headers: {\n        Authorization: `Bearer ${token}`\n      }\n    }).then(res => {\n      console.log(res.data);\n      toast.success(\"Dados atualizados com sucesso!\");\n    }).catch(err => {\n      toast.error(\"Oops, algo saiu mal. Tente novamente.\");\n    });\n  }, [token]);\n  useEffect(() => {\n    if (token) {\n      const userId = JSON.parse(localStorage.getItem(\"@iCash: userId\") || \"\");\n      api.get(`/users/${userId}`, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      }).then(res => setUser(res.data)).catch(res => console.log(res));\n    }\n  }, [token, UpdateUser, login]);\n  return /*#__PURE__*/_jsxDEV(UserContext.Provider, {\n    value: {\n      UpdateUser,\n      user\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 73,\n    columnNumber: 5\n  }, this);\n};\n\n_s(UserDataProvider, \"VqeE9xMnHOXUKnGrq3ZwUbMBOYI=\", false, function () {\n  return [useAuth];\n});\n\n_c = UserDataProvider;\nexport const useUpdate = () => {\n  _s2();\n\n  return useContext(UserContext);\n};\n\n_s2(useUpdate, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\n\nvar _c;\n\n$RefreshReg$(_c, \"UserDataProvider\");","map":{"version":3,"sources":["/home/pierre/Documentos/projects/Q2/sprint6/icash/src/providers/UserProvider/index.tsx"],"names":["createContext","useCallback","useContext","useEffect","useState","api","toast","axios","useAuth","UserContext","UserDataProvider","children","token","localStorage","getItem","user","setUser","login","UpdateUser","data","userId","patch","headers","Authorization","then","res","console","log","success","catch","err","error","JSON","parse","get","useUpdate"],"mappings":";;;;AAAA,SACEA,aADF,EAGEC,WAHF,EAIEC,UAJF,EAKEC,SALF,EAMEC,QANF,QAOO,OAPP;AAQA,OAAOC,GAAP,MAAgB,oBAAhB;AAEA,OAAOC,KAAP,MAAkB,iBAAlB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,SAASC,OAAT,QAAwB,SAAxB;;AAoBA,MAAMC,WAAW,gBAAGT,aAAa,CAAmB,EAAnB,CAAjC;AAEA,OAAO,MAAMU,gBAAgB,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAqC;AAAA;;AACnE,QAAMC,KAAK,GAAGC,YAAY,CAACC,OAAb,CAAqB,cAArB,KAAwC,EAAtD;AACA,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBZ,QAAQ,CAAiB,EAAjB,CAAhC;AACA,QAAM;AAAEa,IAAAA;AAAF,MAAYT,OAAO,EAAzB;AAEA,QAAMU,UAAU,GAAGjB,WAAW,CAC5B,CAACkB,IAAD,EAAuBC,MAAvB,KAA0C;AACxCb,IAAAA,KAAK,CACFc,KADH,CACU,yCAAwCD,MAAO,EADzD,EAC4DD,IAD5D,EACkE;AAC9DG,MAAAA,OAAO,EAAE;AACPC,QAAAA,aAAa,EAAG,UAASX,KAAM;AADxB;AADqD,KADlE,EAMGY,IANH,CAMSC,GAAD,IAAS;AACbC,MAAAA,OAAO,CAACC,GAAR,CAAYF,GAAG,CAACN,IAAhB;AACAb,MAAAA,KAAK,CAACsB,OAAN,CAAc,gCAAd;AACD,KATH,EAUGC,KAVH,CAUUC,GAAD,IAAS;AACdxB,MAAAA,KAAK,CAACyB,KAAN,CAAY,uCAAZ;AACD,KAZH;AAaD,GAf2B,EAgB5B,CAACnB,KAAD,CAhB4B,CAA9B;AAmBAT,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIS,KAAJ,EAAW;AACT,YAAMQ,MAAM,GAAGY,IAAI,CAACC,KAAL,CAAWpB,YAAY,CAACC,OAAb,CAAqB,gBAArB,KAA0C,EAArD,CAAf;AACAT,MAAAA,GAAG,CACA6B,GADH,CACQ,UAASd,MAAO,EADxB,EAC2B;AACvBE,QAAAA,OAAO,EAAE;AAAEC,UAAAA,aAAa,EAAG,UAASX,KAAM;AAAjC;AADc,OAD3B,EAIGY,IAJH,CAISC,GAAD,IAAST,OAAO,CAACS,GAAG,CAACN,IAAL,CAJxB,EAKGU,KALH,CAKUJ,GAAD,IAASC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CALlB;AAMD;AACF,GAVQ,EAUN,CAACb,KAAD,EAAQM,UAAR,EAAoBD,KAApB,CAVM,CAAT;AAYA,sBACE,QAAC,WAAD,CAAa,QAAb;AAAsB,IAAA,KAAK,EAAE;AAAEC,MAAAA,UAAF;AAAcH,MAAAA;AAAd,KAA7B;AAAA,cACGJ;AADH;AAAA;AAAA;AAAA;AAAA,UADF;AAKD,CAzCM;;GAAMD,gB;UAGOF,O;;;KAHPE,gB;AA2Cb,OAAO,MAAMyB,SAAS,GAAG;AAAA;;AAAA,SAAMjC,UAAU,CAACO,WAAD,CAAhB;AAAA,CAAlB;;IAAM0B,S","sourcesContent":["import {\n  createContext,\n  ReactNode,\n  useCallback,\n  useContext,\n  useEffect,\n  useState,\n} from \"react\";\nimport api from \"../../services/api\";\nimport { userUpdateData } from \"../../types/userUpdateData\";\nimport toast from \"react-hot-toast\";\nimport axios from \"axios\";\nimport { userSignUpData } from \"../../types/userSignUpData\";\nimport { useAuth } from \"../Auth\";\n\ninterface UserDataProps {\n  name: string;\n  email: string;\n  cashback: number;\n  city?: string;\n  cellphone?: number;\n  age?: number;\n}\n\ninterface UserProviderProps {\n  children: ReactNode;\n}\n\ninterface UserProviderData {\n  UpdateUser: (data: userUpdateData, userId: string) => void;\n  user: userSignUpData;\n}\n\nconst UserContext = createContext<UserProviderData>({} as UserProviderData);\n\nexport const UserDataProvider = ({ children }: UserProviderProps) => {\n  const token = localStorage.getItem(\"@iCash:token\") || \"\";\n  const [user, setUser] = useState<userSignUpData>({} as userSignUpData);\n  const { login } = useAuth();\n\n  const UpdateUser = useCallback(\n    (data: userUpdateData, userId: string) => {\n      axios\n        .patch(`https://api-icash.herokuapp.com/users/${userId}`, data, {\n          headers: {\n            Authorization: `Bearer ${token}`,\n          },\n        })\n        .then((res) => {\n          console.log(res.data);\n          toast.success(\"Dados atualizados com sucesso!\");\n        })\n        .catch((err) => {\n          toast.error(\"Oops, algo saiu mal. Tente novamente.\");\n        });\n    },\n    [token]\n  );\n\n  useEffect(() => {\n    if (token) {\n      const userId = JSON.parse(localStorage.getItem(\"@iCash: userId\") || \"\");\n      api\n        .get(`/users/${userId}`, {\n          headers: { Authorization: `Bearer ${token}` },\n        })\n        .then((res) => setUser(res.data))\n        .catch((res) => console.log(res));\n    }\n  }, [token, UpdateUser, login]);\n\n  return (\n    <UserContext.Provider value={{ UpdateUser, user }}>\n      {children}\n    </UserContext.Provider>\n  );\n};\n\nexport const useUpdate = () => useContext(UserContext);\n"]},"metadata":{},"sourceType":"module"}