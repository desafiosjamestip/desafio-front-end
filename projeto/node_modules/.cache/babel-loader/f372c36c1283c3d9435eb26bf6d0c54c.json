{"ast":null,"code":"var _jsxFileName = \"/home/pierre/Documentos/projects/Q2/sprint6/icash/src/providers/UserProvider/index.tsx\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport { createContext, useContext } from \"react\";\nimport api from \"../../services/api\";\nimport toast from \"react-hot-toast\";\nimport { useAuth } from \"../Auth\";\nimport jwt_decode from \"jwt-decode\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst UserContext = /*#__PURE__*/createContext({});\nexport const UserDataProvider = ({\n  children\n}) => {\n  _s();\n\n  const {\n    token\n  } = useAuth();\n  console.log(token);\n\n  if (token) {\n    const decoded = jwt_decode(token);\n    localStorage.setItem(\"@iCash: userId\", JSON.stringify(decoded.sub));\n  }\n\n  const {\n    sub\n  } = token;\n  console.log(sub);\n\n  const UpdateUser = data => {\n    const {\n      cellphone,\n      email,\n      name\n    } = data;\n    console.log(token.sub);\n    console.log(sub);\n    api.patch(\"/users\", {\n      name: name,\n      email: email,\n      cellphone: cellphone,\n      id: sub\n    }, {\n      headers: {\n        Authorization: `Bearer ${token}`\n      }\n    }).then(_ => {\n      toast.success(\"Dados atualizados com sucesso!\");\n    }).catch(err => {\n      toast.error(\"Oops, algo saiu mal. Tente novamente.\");\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(UserContext.Provider, {\n    value: {\n      UpdateUser\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 5\n  }, this);\n};\n\n_s(UserDataProvider, \"ZpOvj47KCDv4EW5BIUHQHDAsr3M=\", false, function () {\n  return [useAuth];\n});\n\n_c = UserDataProvider;\nexport const useUpdate = () => {\n  _s2();\n\n  return useContext(UserContext);\n};\n\n_s2(useUpdate, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\n\nvar _c;\n\n$RefreshReg$(_c, \"UserDataProvider\");","map":{"version":3,"sources":["/home/pierre/Documentos/projects/Q2/sprint6/icash/src/providers/UserProvider/index.tsx"],"names":["createContext","useContext","api","toast","useAuth","jwt_decode","UserContext","UserDataProvider","children","token","console","log","decoded","localStorage","setItem","JSON","stringify","sub","UpdateUser","data","cellphone","email","name","patch","id","headers","Authorization","then","_","success","catch","err","error","useUpdate"],"mappings":";;;;AAAA,SAASA,aAAT,EAAmCC,UAAnC,QAA+D,OAA/D;AACA,OAAOC,GAAP,MAAgB,oBAAhB;AAEA,OAAOC,KAAP,MAAkB,iBAAlB;AACA,SAASC,OAAT,QAAwB,SAAxB;AACA,OAAOC,UAAP,MAAuB,YAAvB;;AAiBA,MAAMC,WAAW,gBAAGN,aAAa,CAAmB,EAAnB,CAAjC;AAEA,OAAO,MAAMO,gBAAgB,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAqC;AAAA;;AACnE,QAAM;AAAEC,IAAAA;AAAF,MAAYL,OAAO,EAAzB;AACAM,EAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;;AAEA,MAAIA,KAAJ,EAAW;AACT,UAAMG,OAAO,GAAGP,UAAU,CAAUI,KAAV,CAA1B;AACAI,IAAAA,YAAY,CAACC,OAAb,CAAqB,gBAArB,EAAuCC,IAAI,CAACC,SAAL,CAAeJ,OAAO,CAACK,GAAvB,CAAvC;AACD;;AACD,QAAM;AAAEA,IAAAA;AAAF,MAAUR,KAAhB;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAYM,GAAZ;;AACA,QAAMC,UAAU,GAAIC,IAAD,IAA0B;AAC3C,UAAM;AAAEC,MAAAA,SAAF;AAAaC,MAAAA,KAAb;AAAoBC,MAAAA;AAApB,QAA6BH,IAAnC;AAEAT,IAAAA,OAAO,CAACC,GAAR,CAAYF,KAAK,CAACQ,GAAlB;AACAP,IAAAA,OAAO,CAACC,GAAR,CAAYM,GAAZ;AACAf,IAAAA,GAAG,CACAqB,KADH,CAEI,QAFJ,EAGI;AACED,MAAAA,IAAI,EAAEA,IADR;AAEED,MAAAA,KAAK,EAAEA,KAFT;AAGED,MAAAA,SAAS,EAAEA,SAHb;AAIEI,MAAAA,EAAE,EAAEP;AAJN,KAHJ,EASI;AACEQ,MAAAA,OAAO,EAAE;AACPC,QAAAA,aAAa,EAAG,UAASjB,KAAM;AADxB;AADX,KATJ,EAeGkB,IAfH,CAeSC,CAAD,IAAO;AACXzB,MAAAA,KAAK,CAAC0B,OAAN,CAAc,gCAAd;AACD,KAjBH,EAkBGC,KAlBH,CAkBUC,GAAD,IAAS;AACd5B,MAAAA,KAAK,CAAC6B,KAAN,CAAY,uCAAZ;AACD,KApBH;AAqBD,GA1BD;;AA2BA,sBACE,QAAC,WAAD,CAAa,QAAb;AAAsB,IAAA,KAAK,EAAE;AAAEd,MAAAA;AAAF,KAA7B;AAAA,cACGV;AADH;AAAA;AAAA;AAAA;AAAA,UADF;AAKD,CA1CM;;GAAMD,gB;UACOH,O;;;KADPG,gB;AA4Cb,OAAO,MAAM0B,SAAS,GAAG;AAAA;;AAAA,SAAMhC,UAAU,CAACK,WAAD,CAAhB;AAAA,CAAlB;;IAAM2B,S","sourcesContent":["import { createContext, ReactNode, useContext, useState } from \"react\";\nimport api from \"../../services/api\";\nimport { userUpdateData } from \"../../types/userUpdate\";\nimport toast from \"react-hot-toast\";\nimport { useAuth } from \"../Auth\";\nimport jwt_decode from \"jwt-decode\";\n\ninterface UserProviderProps {\n  children: ReactNode;\n}\n\ninterface UserProviderData {\n  UpdateUser: (data: userUpdateData) => void;\n}\n\ninterface Decoded {\n  email: string;\n  iat: number;\n  exp: number;\n  sub: string;\n}\n\nconst UserContext = createContext<UserProviderData>({} as UserProviderData);\n\nexport const UserDataProvider = ({ children }: UserProviderProps) => {\n  const { token } = useAuth();\n  console.log(token);\n\n  if (token) {\n    const decoded = jwt_decode<Decoded>(token);\n    localStorage.setItem(\"@iCash: userId\", JSON.stringify(decoded.sub));\n  }\n  const { sub } = token;\n  console.log(sub);\n  const UpdateUser = (data: userUpdateData) => {\n    const { cellphone, email, name } = data;\n\n    console.log(token.sub);\n    console.log(sub);\n    api\n      .patch(\n        \"/users\",\n        {\n          name: name,\n          email: email,\n          cellphone: cellphone,\n          id: sub,\n        },\n        {\n          headers: {\n            Authorization: `Bearer ${token}`,\n          },\n        }\n      )\n      .then((_) => {\n        toast.success(\"Dados atualizados com sucesso!\");\n      })\n      .catch((err) => {\n        toast.error(\"Oops, algo saiu mal. Tente novamente.\");\n      });\n  };\n  return (\n    <UserContext.Provider value={{ UpdateUser }}>\n      {children}\n    </UserContext.Provider>\n  );\n};\n\nexport const useUpdate = () => useContext(UserContext);\n"]},"metadata":{},"sourceType":"module"}