{"ast":null,"code":"var _jsxFileName = \"/home/pierre/Documentos/projects/Q2/sprint6/icash/src/components/LoginForm/index.tsx\",\n    _s = $RefreshSig$();\n\nimport { FormContainer } from \"./styles\";\nimport { Input, InputPassword } from \"../Input\";\nimport Button from \"../Button\";\nimport { Link } from \"react-router-dom\";\nimport FormLogo from \"../../assets/LogoForm.svg\";\nimport { useForm } from \"react-hook-form\";\nimport HomeLogo from \"../../assets/home.svg\";\nimport PlusSign from \"../../assets/plus.svg\";\nimport { yupResolver } from \"@hookform/resolvers/yup\";\nimport * as yup from \"yup\";\nimport { useHistory } from \"react-router-dom\";\nimport { useAuth } from \"../../providers/Auth\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst LoginForm = () => {\n  _s();\n\n  var _errors$email, _errors$password;\n\n  const history = useHistory();\n  const {\n    login\n  } = useAuth();\n  const regex = /^(?=.*?[A-Z])(?=.*?[a-z])(?=.*?[0-9])(?=.*?[#?!@$%^&*-])/;\n  const validator = new RegExp(regex);\n  const schema = yup.object().shape({\n    email: yup.string().email(\"Email inválido\").required(\"Campo obrigatório\"),\n    password: yup.string().min(6, \"Senha deve ter no mínimo 6 digitos\").required(\"Campo obrigatório\").matches(validator, \"Senha deve ter pelo menos um caractere minúsculo, um maiúsculo, um número e um caractere especial\")\n  });\n  const {\n    register,\n    handleSubmit,\n    reset,\n    formState: {\n      errors\n    }\n  } = useForm({\n    resolver: yupResolver(schema)\n  });\n\n  const onSubmitData = data => {\n    login(data, history);\n    reset();\n  };\n\n  return /*#__PURE__*/_jsxDEV(FormContainer, {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit(onSubmitData),\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: FormLogo,\n        alt: \"icash-login-form\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Input, {\n        colorSchema: true,\n        type: \"email\",\n        placeholder: \"Email\",\n        register: register,\n        name: \"email\",\n        error: (_errors$email = errors.email) === null || _errors$email === void 0 ? void 0 : _errors$email.message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(InputPassword, {\n        colorSchema: true,\n        type: \"password\",\n        placeholder: \"Senha\",\n        register: register,\n        name: \"password\",\n        error: (_errors$password = errors.password) === null || _errors$password === void 0 ? void 0 : _errors$password.message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        type: \"submit\",\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/signup\",\n        className: \"openAccount\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: \"Abrir uma conta\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n          src: PlusSign,\n          alt: \"to-open-account\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/\",\n        className: \"goHome\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: \"Voltar para Home\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n          src: HomeLogo,\n          alt: \"to-open-account\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this);\n};\n\n_s(LoginForm, \"GhefSkhTZBqrVwLmwrb29cq5d7Y=\", false, function () {\n  return [useHistory, useAuth, useForm];\n});\n\n_c = LoginForm;\nexport default LoginForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"LoginForm\");","map":{"version":3,"sources":["/home/pierre/Documentos/projects/Q2/sprint6/icash/src/components/LoginForm/index.tsx"],"names":["FormContainer","Input","InputPassword","Button","Link","useForm","yupResolver","yup","useHistory","useAuth","LoginForm","history","login","regex","validator","RegExp","schema","object","shape","email","string","required","password","min","matches","register","handleSubmit","reset","formState","errors","resolver","onSubmitData","data","FormLogo","message","PlusSign","HomeLogo"],"mappings":"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","sourcesContent":["import { FormContainer } from \"./styles\";\nimport { Input, InputPassword } from \"../Input\";\nimport Button from \"../Button\";\nimport { Link } from \"react-router-dom\";\nimport FormLogo from \"../../assets/LogoForm.svg\";\nimport { useForm } from \"react-hook-form\";\nimport HomeLogo from \"../../assets/home.svg\";\nimport PlusSign from \"../../assets/plus.svg\";\nimport { yupResolver } from \"@hookform/resolvers/yup\";\nimport * as yup from \"yup\";\nimport { useHistory } from \"react-router-dom\";\nimport { useAuth } from \"../../providers/Auth\";\nimport { userData } from \"../../types/userLoginData\";\n\nconst LoginForm = () => {\n  const history = useHistory();\n  const { login } = useAuth();\n\n  const regex = /^(?=.*?[A-Z])(?=.*?[a-z])(?=.*?[0-9])(?=.*?[#?!@$%^&*-])/;\n  const validator = new RegExp(regex);\n\n  const schema = yup.object().shape({\n    email: yup.string().email(\"Email inválido\").required(\"Campo obrigatório\"),\n    password: yup\n      .string()\n      .min(6, \"Senha deve ter no mínimo 6 digitos\")\n      .required(\"Campo obrigatório\")\n      .matches(\n        validator,\n        \"Senha deve ter pelo menos um caractere minúsculo, um maiúsculo, um número e um caractere especial\"\n      ),\n  });\n\n  const {\n    register,\n    handleSubmit,\n    reset,\n    formState: { errors },\n  } = useForm({\n    resolver: yupResolver(schema),\n  });\n\n  const onSubmitData = (data: userData) => {\n    login(data, history);\n    reset();\n  };\n\n  return (\n    <FormContainer>\n      <form onSubmit={handleSubmit(onSubmitData)}>\n        <img src={FormLogo} alt=\"icash-login-form\" />\n        <Input\n          colorSchema\n          type=\"email\"\n          placeholder=\"Email\"\n          register={register}\n          name=\"email\"\n          error={errors.email?.message}\n        />\n        <InputPassword\n          colorSchema\n          type=\"password\"\n          placeholder=\"Senha\"\n          register={register}\n          name=\"password\"\n          error={errors.password?.message}\n        />\n        <Button type=\"submit\">Login</Button>\n        <Link to=\"/signup\" className=\"openAccount\">\n          <div>Abrir uma conta</div>\n          <img src={PlusSign} alt=\"to-open-account\" />\n        </Link>\n        <Link to=\"/\" className=\"goHome\">\n          <div>Voltar para Home</div>\n          <img src={HomeLogo} alt=\"to-open-account\" />\n        </Link>\n      </form>\n    </FormContainer>\n  );\n};\n\nexport default LoginForm;\n"]},"metadata":{},"sourceType":"module"}