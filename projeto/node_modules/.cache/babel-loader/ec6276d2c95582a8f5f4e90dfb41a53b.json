{"ast":null,"code":"var _jsxFileName = \"/home/pierre/Documentos/projects/Q2/sprint6/icash/src/providers/UserProvider/index.tsx\",\n    _s = $RefreshSig$();\n\nimport { createContext, useContext } from \"react\";\nimport api from \"../../services/api\";\nimport toast from \"react-hot-toast\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst UserContext = /*#__PURE__*/createContext({});\nexport const UserDataProvider = ({\n  children\n}) => {\n  const token = localStorage.getItem(\"token\") || \"\";\n\n  const UpdateUser = data => {\n    api.patch(\"/users\", data, {\n      headers: {\n        Authorization: `Bearer ${token}`\n      }\n    }).then(_ => {\n      toast.success(\"Dados atualizados com sucesso!\");\n    }).catch(err => {\n      toast.error(\"Oops, algo saiu mal. Tente novamente.\");\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(UserContext.Provider, {\n    value: {\n      UpdateUser\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n};\n_c = UserDataProvider;\nexport const useUpdate = () => {\n  _s();\n\n  return useContext(UserContext);\n};\n\n_s(useUpdate, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\n\nvar _c;\n\n$RefreshReg$(_c, \"UserDataProvider\");","map":{"version":3,"sources":["/home/pierre/Documentos/projects/Q2/sprint6/icash/src/providers/UserProvider/index.tsx"],"names":["createContext","useContext","api","toast","UserContext","UserDataProvider","children","token","localStorage","getItem","UpdateUser","data","patch","headers","Authorization","then","_","success","catch","err","error","useUpdate"],"mappings":";;;AAAA,SAASA,aAAT,EAAmCC,UAAnC,QAA+D,OAA/D;AACA,OAAOC,GAAP,MAAgB,oBAAhB;AAEA,OAAOC,KAAP,MAAkB,iBAAlB;;AAUA,MAAMC,WAAW,gBAAGJ,aAAa,CAAmB,EAAnB,CAAjC;AAEA,OAAO,MAAMK,gBAAgB,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAqC;AACnE,QAAMC,KAAK,GAAGC,YAAY,CAACC,OAAb,CAAqB,OAArB,KAAiC,EAA/C;;AAEA,QAAMC,UAAU,GAAIC,IAAD,IAA0B;AAC3CT,IAAAA,GAAG,CACAU,KADH,CACS,QADT,EACmBD,IADnB,EACyB;AACrBE,MAAAA,OAAO,EAAE;AACPC,QAAAA,aAAa,EAAG,UAASP,KAAM;AADxB;AADY,KADzB,EAMGQ,IANH,CAMSC,CAAD,IAAO;AACXb,MAAAA,KAAK,CAACc,OAAN,CAAc,gCAAd;AACD,KARH,EASGC,KATH,CASUC,GAAD,IAAS;AACdhB,MAAAA,KAAK,CAACiB,KAAN,CAAY,uCAAZ;AACD,KAXH;AAYD,GAbD;;AAcA,sBACE,QAAC,WAAD,CAAa,QAAb;AAAsB,IAAA,KAAK,EAAE;AAAEV,MAAAA;AAAF,KAA7B;AAAA,cACGJ;AADH;AAAA;AAAA;AAAA;AAAA,UADF;AAKD,CAtBM;KAAMD,gB;AAwBb,OAAO,MAAMgB,SAAS,GAAG;AAAA;;AAAA,SAAMpB,UAAU,CAACG,WAAD,CAAhB;AAAA,CAAlB;;GAAMiB,S","sourcesContent":["import { createContext, ReactNode, useContext, useState } from \"react\";\nimport api from \"../../services/api\";\nimport { userUpdateData } from \"../../types/userUpdate\";\nimport toast from \"react-hot-toast\";\n\ninterface UserProviderProps {\n  children: ReactNode;\n}\n\ninterface UserProviderData {\n  UpdateUser: (data: userUpdateData) => void;\n}\n\nconst UserContext = createContext<UserProviderData>({} as UserProviderData);\n\nexport const UserDataProvider = ({ children }: UserProviderProps) => {\n  const token = localStorage.getItem(\"token\") || \"\";\n\n  const UpdateUser = (data: userUpdateData) => {\n    api\n      .patch(\"/users\", data, {\n        headers: {\n          Authorization: `Bearer ${token}`,\n        },\n      })\n      .then((_) => {\n        toast.success(\"Dados atualizados com sucesso!\");\n      })\n      .catch((err) => {\n        toast.error(\"Oops, algo saiu mal. Tente novamente.\");\n      });\n  };\n  return (\n    <UserContext.Provider value={{ UpdateUser }}>\n      {children}\n    </UserContext.Provider>\n  );\n};\n\nexport const useUpdate = () => useContext(UserContext);\n"]},"metadata":{},"sourceType":"module"}