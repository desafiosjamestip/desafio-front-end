{"ast":null,"code":"var _jsxFileName = \"/home/pierre/Documentos/projects/novo/desafio-frontend/src/providers/Products/index.tsx\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport { createContext, useContext, useState } from \"react\";\nimport jwt_decode from \"jwt-decode\";\nimport { useAuthLogin } from \"../Auth\";\nimport toast from \"react-hot-toast\";\nimport api from \"../../Services\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const ProductsContext = /*#__PURE__*/createContext({});\nexport const ProductsProvider = ({\n  children\n}) => {\n  _s();\n\n  const [openModal, setOpenModal] = useState(false);\n  const [codeProduct, setCodeProduct] = useState(0);\n  const {\n    token\n  } = useAuthLogin();\n\n  if (token) {\n    const decoded = jwt_decode(token);\n    localStorage.setItem(\"userId\", JSON.stringify(decoded.sub));\n  }\n\n  const userId = localStorage.getItem(\"userId\");\n  const [store, setStore] = useState(JSON.parse(localStorage.getItem(\"store\") || \"[]\"));\n\n  const registerProducts = data => {\n    const {\n      category,\n      name,\n      price,\n      provider\n    } = data;\n    api.post(\"/products\", {\n      category: category,\n      price: price,\n      provider: provider,\n      name: name,\n      id: store.length + 1,\n      userId: userId\n    }, {\n      headers: {\n        Authorization: `Bearer ${token}`\n      }\n    }).then(resp => {\n      setStore([...store, resp.data]);\n      toast.success(\"Produto adicionado ao registro geral!\");\n    }).catch(_ => toast.error(\"Não possível cadastrar, tente novamente.\"));\n  };\n\n  const updateProducts = (data, productId) => {\n    api.patch(`/products/${productId}`, data, {\n      headers: {\n        Authorization: `Bearer ${token}`\n      }\n    }).then(_ => {\n      toast.success(\"Produto atualizado com sucesso!\");\n    }).catch(_ => toast.error(\"Não foi possível atualizar os dados, tente novamente.\"));\n  };\n\n  const loadStore = () => {\n    api.get(\"/products\", {\n      headers: {\n        Authorization: `Bearer ${token}`\n      }\n    }).then(resp => {\n      setStore(resp.data);\n    }).catch(err => console.log(err));\n  };\n\n  return /*#__PURE__*/_jsxDEV(ProductsContext.Provider, {\n    value: {\n      store,\n      setStore,\n      registerProducts,\n      updateProducts,\n      setOpenModal,\n      openModal,\n      setCodeProduct,\n      codeProduct,\n      loadStore\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 110,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ProductsProvider, \"MbQFgkZr4iuzshbBQUbltIc2+3M=\", false, function () {\n  return [useAuthLogin];\n});\n\n_c = ProductsProvider;\nexport const useProducts = () => {\n  _s2();\n\n  return useContext(ProductsContext);\n};\n\n_s2(useProducts, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\n\nvar _c;\n\n$RefreshReg$(_c, \"ProductsProvider\");","map":{"version":3,"sources":["/home/pierre/Documentos/projects/novo/desafio-frontend/src/providers/Products/index.tsx"],"names":["createContext","useContext","useState","jwt_decode","useAuthLogin","toast","api","ProductsContext","ProductsProvider","children","openModal","setOpenModal","codeProduct","setCodeProduct","token","decoded","localStorage","setItem","JSON","stringify","sub","userId","getItem","store","setStore","parse","registerProducts","data","category","name","price","provider","post","id","length","headers","Authorization","then","resp","success","catch","_","error","updateProducts","productId","patch","loadStore","get","err","console","log","useProducts"],"mappings":";;;;AAAA,SACEA,aADF,EAKEC,UALF,EAOEC,QAPF,QAQO,OARP;AAYA,OAAOC,UAAP,MAAuB,YAAvB;AACA,SAASC,YAAT,QAA6B,SAA7B;AAEA,OAAOC,KAAP,MAAkB,iBAAlB;AACA,OAAOC,GAAP,MAAgB,gBAAhB;;AAyBA,OAAO,MAAMC,eAAe,gBAAGP,aAAa,CAC1C,EAD0C,CAArC;AAIP,OAAO,MAAMQ,gBAAgB,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAyC;AAAA;;AACvE,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BT,QAAQ,CAAU,KAAV,CAA1C;AACA,QAAM,CAACU,WAAD,EAAcC,cAAd,IAAgCX,QAAQ,CAAC,CAAD,CAA9C;AAEA,QAAM;AAAEY,IAAAA;AAAF,MAAYV,YAAY,EAA9B;;AACA,MAAIU,KAAJ,EAAW;AACT,UAAMC,OAAO,GAAGZ,UAAU,CAAUW,KAAV,CAA1B;AACAE,IAAAA,YAAY,CAACC,OAAb,CAAqB,QAArB,EAA+BC,IAAI,CAACC,SAAL,CAAeJ,OAAO,CAACK,GAAvB,CAA/B;AACD;;AACD,QAAMC,MAAM,GAAGL,YAAY,CAACM,OAAb,CAAqB,QAArB,CAAf;AAEA,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBtB,QAAQ,CAChCgB,IAAI,CAACO,KAAL,CAAWT,YAAY,CAACM,OAAb,CAAqB,OAArB,KAAiC,IAA5C,CADgC,CAAlC;;AAIA,QAAMI,gBAAgB,GAAIC,IAAD,IAAwB;AAC/C,UAAM;AAAEC,MAAAA,QAAF;AAAYC,MAAAA,IAAZ;AAAkBC,MAAAA,KAAlB;AAAyBC,MAAAA;AAAzB,QAAsCJ,IAA5C;AACArB,IAAAA,GAAG,CACA0B,IADH,CAEI,WAFJ,EAGI;AACEJ,MAAAA,QAAQ,EAAEA,QADZ;AAEEE,MAAAA,KAAK,EAAEA,KAFT;AAGEC,MAAAA,QAAQ,EAAEA,QAHZ;AAIEF,MAAAA,IAAI,EAAEA,IAJR;AAKEI,MAAAA,EAAE,EAAEV,KAAK,CAACW,MAAN,GAAe,CALrB;AAMEb,MAAAA,MAAM,EAAEA;AANV,KAHJ,EAWI;AAAEc,MAAAA,OAAO,EAAE;AAAEC,QAAAA,aAAa,EAAG,UAAStB,KAAM;AAAjC;AAAX,KAXJ,EAaGuB,IAbH,CAaSC,IAAD,IAAU;AACdd,MAAAA,QAAQ,CAAC,CAAC,GAAGD,KAAJ,EAAWe,IAAI,CAACX,IAAhB,CAAD,CAAR;AACAtB,MAAAA,KAAK,CAACkC,OAAN,CAAc,uCAAd;AACD,KAhBH,EAiBGC,KAjBH,CAiBUC,CAAD,IAAOpC,KAAK,CAACqC,KAAN,CAAY,0CAAZ,CAjBhB;AAkBD,GApBD;;AAsBA,QAAMC,cAAc,GAAG,CAAChB,IAAD,EAA2BiB,SAA3B,KAAiD;AACtEtC,IAAAA,GAAG,CACAuC,KADH,CACU,aAAYD,SAAU,EADhC,EACmCjB,IADnC,EACyC;AACrCQ,MAAAA,OAAO,EAAE;AAAEC,QAAAA,aAAa,EAAG,UAAStB,KAAM;AAAjC;AAD4B,KADzC,EAIGuB,IAJH,CAISI,CAAD,IAAO;AACXpC,MAAAA,KAAK,CAACkC,OAAN,CAAc,iCAAd;AACD,KANH,EAOGC,KAPH,CAOUC,CAAD,IACLpC,KAAK,CAACqC,KAAN,CAAY,uDAAZ,CARJ;AAUD,GAXD;;AAaA,QAAMI,SAAS,GAAG,MAAM;AACtBxC,IAAAA,GAAG,CACAyC,GADH,CACO,WADP,EACoB;AAChBZ,MAAAA,OAAO,EAAE;AACPC,QAAAA,aAAa,EAAG,UAAStB,KAAM;AADxB;AADO,KADpB,EAMGuB,IANH,CAMSC,IAAD,IAAU;AACdd,MAAAA,QAAQ,CAACc,IAAI,CAACX,IAAN,CAAR;AACD,KARH,EASGa,KATH,CASUQ,GAAD,IAASC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CATlB;AAUD,GAXD;;AAaA,sBACE,QAAC,eAAD,CAAiB,QAAjB;AACE,IAAA,KAAK,EAAE;AACLzB,MAAAA,KADK;AAELC,MAAAA,QAFK;AAGLE,MAAAA,gBAHK;AAILiB,MAAAA,cAJK;AAKLhC,MAAAA,YALK;AAMLD,MAAAA,SANK;AAOLG,MAAAA,cAPK;AAQLD,MAAAA,WARK;AASLkC,MAAAA;AATK,KADT;AAAA,cAaGrC;AAbH;AAAA;AAAA;AAAA;AAAA,UADF;AAiBD,CAhFM;;GAAMD,gB;UAIOJ,Y;;;KAJPI,gB;AAkFb,OAAO,MAAM2C,WAAW,GAAG;AAAA;;AAAA,SAAMlD,UAAU,CAACM,eAAD,CAAhB;AAAA,CAApB;;IAAM4C,W","sourcesContent":["import {\n  createContext,\n  Dispatch,\n  ReactNode,\n  SetStateAction,\n  useContext,\n  useEffect,\n  useState,\n} from \"react\";\nimport { ProductsData } from \"../../types/ProductsData\";\nimport { UpdateProductsData } from \"../../types/UpdateProductsData\";\n\nimport jwt_decode from \"jwt-decode\";\nimport { useAuthLogin } from \"../Auth\";\n\nimport toast from \"react-hot-toast\";\nimport api from \"../../Services\";\n\ninterface ProductsProviderProps {\n  children: ReactNode;\n}\n\ninterface ProductsDataProps {\n  store: ProductsData[] | UpdateProductsData[];\n  setStore: React.Dispatch<React.SetStateAction<ProductsData[]>>;\n  registerProducts: (data: ProductsData) => void;\n  updateProducts: (data: UpdateProductsData, productId: number) => void;\n  setOpenModal: Dispatch<SetStateAction<boolean>>;\n  openModal: boolean;\n  setCodeProduct: Dispatch<SetStateAction<number>>;\n  codeProduct: number;\n  loadStore: () => void;\n}\n\ninterface Decoded {\n  email: string;\n  iat: number;\n  exp: number;\n  sub: string;\n}\n\nexport const ProductsContext = createContext<ProductsDataProps>(\n  {} as ProductsDataProps\n);\n\nexport const ProductsProvider = ({ children }: ProductsProviderProps) => {\n  const [openModal, setOpenModal] = useState<boolean>(false);\n  const [codeProduct, setCodeProduct] = useState(0);\n\n  const { token } = useAuthLogin();\n  if (token) {\n    const decoded = jwt_decode<Decoded>(token);\n    localStorage.setItem(\"userId\", JSON.stringify(decoded.sub));\n  }\n  const userId = localStorage.getItem(\"userId\");\n\n  const [store, setStore] = useState<ProductsData[]>(\n    JSON.parse(localStorage.getItem(\"store\") || \"[]\")\n  );\n\n  const registerProducts = (data: ProductsData) => {\n    const { category, name, price, provider } = data;\n    api\n      .post(\n        \"/products\",\n        {\n          category: category,\n          price: price,\n          provider: provider,\n          name: name,\n          id: store.length + 1,\n          userId: userId,\n        },\n        { headers: { Authorization: `Bearer ${token}` } }\n      )\n      .then((resp) => {\n        setStore([...store, resp.data]);\n        toast.success(\"Produto adicionado ao registro geral!\");\n      })\n      .catch((_) => toast.error(\"Não possível cadastrar, tente novamente.\"));\n  };\n\n  const updateProducts = (data: UpdateProductsData, productId: number) => {\n    api\n      .patch(`/products/${productId}`, data, {\n        headers: { Authorization: `Bearer ${token}` },\n      })\n      .then((_) => {\n        toast.success(\"Produto atualizado com sucesso!\");\n      })\n      .catch((_) =>\n        toast.error(\"Não foi possível atualizar os dados, tente novamente.\")\n      );\n  };\n\n  const loadStore = () => {\n    api\n      .get(\"/products\", {\n        headers: {\n          Authorization: `Bearer ${token}`,\n        },\n      })\n      .then((resp) => {\n        setStore(resp.data);\n      })\n      .catch((err) => console.log(err));\n  };\n\n  return (\n    <ProductsContext.Provider\n      value={{\n        store,\n        setStore,\n        registerProducts,\n        updateProducts,\n        setOpenModal,\n        openModal,\n        setCodeProduct,\n        codeProduct,\n        loadStore,\n      }}\n    >\n      {children}\n    </ProductsContext.Provider>\n  );\n};\n\nexport const useProducts = () => useContext(ProductsContext);\n"]},"metadata":{},"sourceType":"module"}