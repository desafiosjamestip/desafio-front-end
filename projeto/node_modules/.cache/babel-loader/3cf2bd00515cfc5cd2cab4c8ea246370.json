{"ast":null,"code":"var _jsxFileName = \"/home/pierre/Documentos/projects/Q2/sprint6/icash/src/providers/store-register/index.tsx\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport { createContext, useCallback, useContext, useEffect, useState } from \"react\";\nimport toast from \"react-hot-toast\";\nimport api from \"../../services/api\";\nimport { useAuth } from \"../Auth\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst StoreRegisterContext = /*#__PURE__*/createContext({});\nexport const StoreRegisterProvider = ({\n  children\n}) => {\n  _s();\n\n  const [showModalStore, setShowModalStore] = useState(false);\n  const [stores, setStores] = useState([]);\n  const {\n    token\n  } = useAuth();\n  const storeRegister = useCallback((data, setShowModalStore) => {\n    api.post(\"/stores\", data, {\n      headers: {\n        Authorization: `Bearer ${token}`\n      }\n    }).then(() => {\n      toast.success(\"Loja Cadastrada\");\n      setShowModalStore(false);\n    }).catch(() => toast.error(\"Erro ao cadastrar loja\"));\n  }, [token]);\n  const storeUpdate = useCallback((data, setShowModalStore) => {\n    api.patch(\"/stores\", data, {\n      headers: {\n        Authorization: `Bearer ${token}`\n      }\n    }).then(() => {\n      toast.success(\"Dados atualizados\");\n      setShowModalStore(false);\n    }).catch(() => toast.error(\"Erro ao atualizar dados\"));\n  }, [token]);\n  useEffect(() => {\n    if (token) {\n      api.get(\"/stores\", {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      }).then(res => setStores(res.data)).catch(err => console.log(err));\n    }\n  }, [token, storeRegister, storeUpdate]);\n  return /*#__PURE__*/_jsxDEV(StoreRegisterContext.Provider, {\n    value: {\n      stores,\n      storeUpdate,\n      storeRegister,\n      setShowModalStore,\n      showModalStore\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 101,\n    columnNumber: 5\n  }, this);\n};\n\n_s(StoreRegisterProvider, \"SDnCtpCyv8+Uip3Ij+oVPN4yCvk=\", false, function () {\n  return [useAuth];\n});\n\n_c = StoreRegisterProvider;\nexport const useStoreRegister = () => {\n  _s2();\n\n  return useContext(StoreRegisterContext);\n};\n\n_s2(useStoreRegister, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\n\nvar _c;\n\n$RefreshReg$(_c, \"StoreRegisterProvider\");","map":{"version":3,"sources":["/home/pierre/Documentos/projects/Q2/sprint6/icash/src/providers/store-register/index.tsx"],"names":["createContext","useCallback","useContext","useEffect","useState","toast","api","useAuth","StoreRegisterContext","StoreRegisterProvider","children","showModalStore","setShowModalStore","stores","setStores","token","storeRegister","data","post","headers","Authorization","then","success","catch","error","storeUpdate","patch","get","res","err","console","log","useStoreRegister"],"mappings":";;;;AAAA,SACEA,aADF,EAGEC,WAHF,EAIEC,UAJF,EAKEC,SALF,EAMEC,QANF,QAOO,OAPP;AAQA,OAAOC,KAAP,MAAkB,iBAAlB;AACA,OAAOC,GAAP,MAAgB,oBAAhB;AAEA,SAASC,OAAT,QAAwB,SAAxB;;AAkCA,MAAMC,oBAAoB,gBAAGR,aAAa,CACxC,EADwC,CAA1C;AAIA,OAAO,MAAMS,qBAAqB,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAsC;AAAA;;AACzE,QAAM,CAACC,cAAD,EAAiBC,iBAAjB,IAAsCR,QAAQ,CAAU,KAAV,CAApD;AACA,QAAM,CAACS,MAAD,EAASC,SAAT,IAAsBV,QAAQ,CAAW,EAAX,CAApC;AACA,QAAM;AAAEW,IAAAA;AAAF,MAAYR,OAAO,EAAzB;AAEA,QAAMS,aAAa,GAAGf,WAAW,CAC/B,CACEgB,IADF,EAEEL,iBAFF,KAGK;AACHN,IAAAA,GAAG,CACAY,IADH,CACQ,SADR,EACmBD,IADnB,EACyB;AACrBE,MAAAA,OAAO,EAAE;AAAEC,QAAAA,aAAa,EAAG,UAASL,KAAM;AAAjC;AADY,KADzB,EAIGM,IAJH,CAIQ,MAAM;AACVhB,MAAAA,KAAK,CAACiB,OAAN,CAAc,iBAAd;AACAV,MAAAA,iBAAiB,CAAC,KAAD,CAAjB;AACD,KAPH,EAQGW,KARH,CAQS,MAAMlB,KAAK,CAACmB,KAAN,CAAY,wBAAZ,CARf;AASD,GAd8B,EAe/B,CAACT,KAAD,CAf+B,CAAjC;AAkBA,QAAMU,WAAW,GAAGxB,WAAW,CAC7B,CACEgB,IADF,EAEEL,iBAFF,KAGK;AACHN,IAAAA,GAAG,CACAoB,KADH,CACS,SADT,EACoBT,IADpB,EAC0B;AACtBE,MAAAA,OAAO,EAAE;AAAEC,QAAAA,aAAa,EAAG,UAASL,KAAM;AAAjC;AADa,KAD1B,EAIGM,IAJH,CAIQ,MAAM;AACVhB,MAAAA,KAAK,CAACiB,OAAN,CAAc,mBAAd;AACAV,MAAAA,iBAAiB,CAAC,KAAD,CAAjB;AACD,KAPH,EAQGW,KARH,CAQS,MAAMlB,KAAK,CAACmB,KAAN,CAAY,yBAAZ,CARf;AASD,GAd4B,EAe7B,CAACT,KAAD,CAf6B,CAA/B;AAkBAZ,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIY,KAAJ,EAAW;AACTT,MAAAA,GAAG,CACAqB,GADH,CACO,SADP,EACkB;AAAER,QAAAA,OAAO,EAAE;AAAEC,UAAAA,aAAa,EAAG,UAASL,KAAM;AAAjC;AAAX,OADlB,EAEGM,IAFH,CAESO,GAAD,IAASd,SAAS,CAACc,GAAG,CAACX,IAAL,CAF1B,EAGGM,KAHH,CAGUM,GAAD,IAASC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CAHlB;AAID;AACF,GAPQ,EAON,CAACd,KAAD,EAAQC,aAAR,EAAuBS,WAAvB,CAPM,CAAT;AASA,sBACE,QAAC,oBAAD,CAAsB,QAAtB;AACE,IAAA,KAAK,EAAE;AACLZ,MAAAA,MADK;AAELY,MAAAA,WAFK;AAGLT,MAAAA,aAHK;AAILJ,MAAAA,iBAJK;AAKLD,MAAAA;AALK,KADT;AAAA,cASGD;AATH;AAAA;AAAA;AAAA;AAAA,UADF;AAaD,CA/DM;;GAAMD,qB;UAGOF,O;;;KAHPE,qB;AAiEb,OAAO,MAAMuB,gBAAgB,GAAG;AAAA;;AAAA,SAAM9B,UAAU,CAACM,oBAAD,CAAhB;AAAA,CAAzB;;IAAMwB,gB","sourcesContent":["import {\n  createContext,\n  ReactNode,\n  useCallback,\n  useContext,\n  useEffect,\n  useState,\n} from \"react\";\nimport toast from \"react-hot-toast\";\nimport api from \"../../services/api\";\nimport { IData } from \"../../types/storeRegister\";\nimport { useAuth } from \"../Auth\";\n\ninterface StoreRegisterProps {\n  children: ReactNode;\n}\n\ninterface Stores {\n  name: string;\n  address: string;\n  city: string;\n  category: string;\n  cashback: number;\n  working_hours: string;\n  telephone: string;\n  store_img: string;\n  open: string;\n  onSale: string;\n  id: number;\n}\n\ninterface StoreRegisterData {\n  storeRegister: (\n    data: IData,\n    setshowModalStore: React.Dispatch<React.SetStateAction<boolean>>\n  ) => void;\n  showModalStore: boolean;\n  setShowModalStore: React.Dispatch<React.SetStateAction<boolean>>;\n  storeUpdate: (\n    data: IData,\n    setshowModalStore: React.Dispatch<React.SetStateAction<boolean>>\n  ) => void;\n  stores: Stores[];\n}\n\nconst StoreRegisterContext = createContext<StoreRegisterData>(\n  {} as StoreRegisterData\n);\n\nexport const StoreRegisterProvider = ({ children }: StoreRegisterProps) => {\n  const [showModalStore, setShowModalStore] = useState<boolean>(false);\n  const [stores, setStores] = useState<Stores[]>([] as Stores[]);\n  const { token } = useAuth();\n\n  const storeRegister = useCallback(\n    (\n      data: IData,\n      setShowModalStore: React.Dispatch<React.SetStateAction<boolean>>\n    ) => {\n      api\n        .post(\"/stores\", data, {\n          headers: { Authorization: `Bearer ${token}` },\n        })\n        .then(() => {\n          toast.success(\"Loja Cadastrada\");\n          setShowModalStore(false);\n        })\n        .catch(() => toast.error(\"Erro ao cadastrar loja\"));\n    },\n    [token]\n  );\n\n  const storeUpdate = useCallback(\n    (\n      data: IData,\n      setShowModalStore: React.Dispatch<React.SetStateAction<boolean>>\n    ) => {\n      api\n        .patch(\"/stores\", data, {\n          headers: { Authorization: `Bearer ${token}` },\n        })\n        .then(() => {\n          toast.success(\"Dados atualizados\");\n          setShowModalStore(false);\n        })\n        .catch(() => toast.error(\"Erro ao atualizar dados\"));\n    },\n    [token]\n  );\n\n  useEffect(() => {\n    if (token) {\n      api\n        .get(\"/stores\", { headers: { Authorization: `Bearer ${token}` } })\n        .then((res) => setStores(res.data))\n        .catch((err) => console.log(err));\n    }\n  }, [token, storeRegister, storeUpdate]);\n\n  return (\n    <StoreRegisterContext.Provider\n      value={{\n        stores,\n        storeUpdate,\n        storeRegister,\n        setShowModalStore,\n        showModalStore,\n      }}\n    >\n      {children}\n    </StoreRegisterContext.Provider>\n  );\n};\n\nexport const useStoreRegister = () => useContext(StoreRegisterContext);\n"]},"metadata":{},"sourceType":"module"}