{"ast":null,"code":"var _jsxFileName = \"/home/pierre/Documentos/projects/Q2/sprint6/icash/src/components/Input/index.tsx\",\n    _s = $RefreshSig$();\n\nimport { Container, InputContainer } from \"./styles\";\nimport Visibility from \"../../assets/visibility.svg\";\nimport VisibilityWhite from \"../../assets/visibilityW.svg\";\nimport Invisible from \"../../assets/invisible.svg\";\nimport InvisibleWhite from \"../../assets/invisibleW.svg\";\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Input = ({\n  register,\n  type,\n  name,\n  error = \"\",\n  colorSchema = false,\n  ...rest\n}) => {\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: [/*#__PURE__*/_jsxDEV(InputContainer, {\n      colorSchema: colorSchema,\n      children: /*#__PURE__*/_jsxDEV(\"input\", { ...register(name),\n        type: type,\n        ...rest\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"inputErrors\",\n      children: !!error && /*#__PURE__*/_jsxDEV(\"span\", {\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 48\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n};\n_c = Input;\nexport const InputPassword = ({\n  register,\n  type,\n  name,\n  error = \"\",\n  colorSchema = false,\n  ...rest\n}) => {\n  _s();\n\n  const [passwordShown, setPasswordShown] = useState(false);\n\n  const togglePasswordVisiblity = () => {\n    setPasswordShown(passwordShown ? false : true);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: [/*#__PURE__*/_jsxDEV(InputContainer, {\n      colorSchema: colorSchema,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", { ...register(name),\n        type: passwordShown ? \"text\" : \"password\",\n        ...rest\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this), colorSchema ? /*#__PURE__*/_jsxDEV(\"img\", {\n        src: passwordShown ? Invisible : Visibility,\n        alt: \"password-visibility\",\n        onClick: togglePasswordVisiblity\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"img\", {\n        src: passwordShown ? InvisibleWhite : VisibilityWhite,\n        alt: \"password-visibility\",\n        onClick: togglePasswordVisiblity\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"inputErrors\",\n      children: !!error && /*#__PURE__*/_jsxDEV(\"span\", {\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 48\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, this);\n};\n\n_s(InputPassword, \"bas2Vmn2NzeTgqNkroDd6vpWxAA=\");\n\n_c2 = InputPassword;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Input\");\n$RefreshReg$(_c2, \"InputPassword\");","map":{"version":3,"sources":["/home/pierre/Documentos/projects/Q2/sprint6/icash/src/components/Input/index.tsx"],"names":["Container","InputContainer","useState","Input","register","type","name","error","colorSchema","rest","InputPassword","passwordShown","setPasswordShown","togglePasswordVisiblity","Invisible","Visibility","InvisibleWhite","VisibilityWhite"],"mappings":";;;AAAA,SAASA,SAAT,EAAoBC,cAApB,QAA0C,UAA1C;;;;;AAKA,SAASC,QAAT,QAAyB,OAAzB;;AAWA,OAAO,MAAMC,KAAK,GAAG,CAAC;AACpBC,EAAAA,QADoB;AAEpBC,EAAAA,IAFoB;AAGpBC,EAAAA,IAHoB;AAIpBC,EAAAA,KAAK,GAAG,EAJY;AAKpBC,EAAAA,WAAW,GAAG,KALM;AAMpB,KAAGC;AANiB,CAAD,KAOH;AAChB,sBACE,QAAC,SAAD;AAAA,4BACE,QAAC,cAAD;AAAgB,MAAA,WAAW,EAAED,WAA7B;AAAA,6BACE,sBAAWJ,QAAQ,CAACE,IAAD,CAAnB;AAA2B,QAAA,IAAI,EAAED,IAAjC;AAAA,WAA2CI;AAA3C;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF,eAIE;AAAK,MAAA,SAAS,EAAC,aAAf;AAAA,gBAA8B,CAAC,CAACF,KAAF,iBAAW;AAAA,kBAAOA;AAAP;AAAA;AAAA;AAAA;AAAA;AAAzC;AAAA;AAAA;AAAA;AAAA,YAJF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAQD,CAhBM;KAAMJ,K;AAkBb,OAAO,MAAMO,aAAa,GAAG,CAAC;AAC5BN,EAAAA,QAD4B;AAE5BC,EAAAA,IAF4B;AAG5BC,EAAAA,IAH4B;AAI5BC,EAAAA,KAAK,GAAG,EAJoB;AAK5BC,EAAAA,WAAW,GAAG,KALc;AAM5B,KAAGC;AANyB,CAAD,KAOX;AAAA;;AAChB,QAAM,CAACE,aAAD,EAAgBC,gBAAhB,IAAoCV,QAAQ,CAAU,KAAV,CAAlD;;AAEA,QAAMW,uBAAuB,GAAG,MAAM;AACpCD,IAAAA,gBAAgB,CAACD,aAAa,GAAG,KAAH,GAAW,IAAzB,CAAhB;AACD,GAFD;;AAIA,sBACE,QAAC,SAAD;AAAA,4BACE,QAAC,cAAD;AAAgB,MAAA,WAAW,EAAEH,WAA7B;AAAA,8BACE,sBACMJ,QAAQ,CAACE,IAAD,CADd;AAEE,QAAA,IAAI,EAAEK,aAAa,GAAG,MAAH,GAAY,UAFjC;AAAA,WAGMF;AAHN;AAAA;AAAA;AAAA;AAAA,cADF,EAMGD,WAAW,gBACV;AACE,QAAA,GAAG,EAAEG,aAAa,GAAGG,SAAH,GAAeC,UADnC;AAEE,QAAA,GAAG,EAAC,qBAFN;AAGE,QAAA,OAAO,EAAEF;AAHX;AAAA;AAAA;AAAA;AAAA,cADU,gBAOV;AACE,QAAA,GAAG,EAAEF,aAAa,GAAGK,cAAH,GAAoBC,eADxC;AAEE,QAAA,GAAG,EAAC,qBAFN;AAGE,QAAA,OAAO,EAAEJ;AAHX;AAAA;AAAA;AAAA;AAAA,cAbJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAqBE;AAAK,MAAA,SAAS,EAAC,aAAf;AAAA,gBAA8B,CAAC,CAACN,KAAF,iBAAW;AAAA,kBAAOA;AAAP;AAAA;AAAA;AAAA;AAAA;AAAzC;AAAA;AAAA;AAAA;AAAA,YArBF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAyBD,CAvCM;;GAAMG,a;;MAAAA,a","sourcesContent":["import { Container, InputContainer } from \"./styles\";\nimport Visibility from \"../../assets/visibility.svg\";\nimport VisibilityWhite from \"../../assets/visibilityW.svg\";\nimport Invisible from \"../../assets/invisible.svg\";\nimport InvisibleWhite from \"../../assets/invisibleW.svg\";\nimport { useState } from \"react\";\n\ninterface InputProps {\n  register: (name: string) => void;\n  name: string;\n  error: string;\n  colorSchema?: boolean;\n  type?: string;\n  placeholder?: string;\n}\n\nexport const Input = ({\n  register,\n  type,\n  name,\n  error = \"\",\n  colorSchema = false,\n  ...rest\n}: InputProps) => {\n  return (\n    <Container>\n      <InputContainer colorSchema={colorSchema}>\n        <input {...register(name)} type={type} {...rest} />\n      </InputContainer>\n      <div className=\"inputErrors\">{!!error && <span>{error}</span>}</div>\n    </Container>\n  );\n};\n\nexport const InputPassword = ({\n  register,\n  type,\n  name,\n  error = \"\",\n  colorSchema = false,\n  ...rest\n}: InputProps) => {\n  const [passwordShown, setPasswordShown] = useState<boolean>(false);\n\n  const togglePasswordVisiblity = () => {\n    setPasswordShown(passwordShown ? false : true);\n  };\n\n  return (\n    <Container>\n      <InputContainer colorSchema={colorSchema}>\n        <input\n          {...register(name)}\n          type={passwordShown ? \"text\" : \"password\"}\n          {...rest}\n        />\n        {colorSchema ? (\n          <img\n            src={passwordShown ? Invisible : Visibility}\n            alt=\"password-visibility\"\n            onClick={togglePasswordVisiblity}\n          />\n        ) : (\n          <img\n            src={passwordShown ? InvisibleWhite : VisibilityWhite}\n            alt=\"password-visibility\"\n            onClick={togglePasswordVisiblity}\n          />\n        )}\n      </InputContainer>\n      <div className=\"inputErrors\">{!!error && <span>{error}</span>}</div>\n    </Container>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}