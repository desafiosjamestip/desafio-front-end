{"ast":null,"code":"var _jsxFileName = \"/home/pierre/Documentos/projects/Q2/sprint6/icash/src/routes/Route.tsx\",\n    _s = $RefreshSig$();\n\nimport { Redirect, Route as ReactRoute } from \"react-router-dom\";\nimport { useAuth } from \"../providers/Auth\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Route = ({\n  isPrivate = false,\n  component: Component,\n  ...rest\n}) => {\n  _s();\n\n  const {\n    token\n  } = useAuth();\n  return /*#__PURE__*/_jsxDEV(ReactRoute, { ...rest,\n    render: () => isPrivate === !!token ? /*#__PURE__*/_jsxDEV(Component, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 11\n    }, this) : /*#__PURE__*/_jsxDEV(Redirect, {\n      to: isPrivate ? \"/\" : \"/dashboard\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 11\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Route, \"ZpOvj47KCDv4EW5BIUHQHDAsr3M=\", false, function () {\n  return [useAuth];\n});\n\n_c = Route;\n\nvar _c;\n\n$RefreshReg$(_c, \"Route\");","map":{"version":3,"sources":["/home/pierre/Documentos/projects/Q2/sprint6/icash/src/routes/Route.tsx"],"names":["Redirect","Route","ReactRoute","useAuth","isPrivate","component","Component","rest","token"],"mappings":";;;AACA,SAASA,QAAT,EAAmBC,KAAK,IAAIC,UAA5B,QAA0D,kBAA1D;AACA,SAASC,OAAT,QAAwB,mBAAxB;;AAOA,OAAO,MAAMF,KAAK,GAAG,CAAC;AACpBG,EAAAA,SAAS,GAAG,KADQ;AAEpBC,EAAAA,SAAS,EAAEC,SAFS;AAGpB,KAAGC;AAHiB,CAAD,KAIR;AAAA;;AACX,QAAM;AAAEC,IAAAA;AAAF,MAAYL,OAAO,EAAzB;AAEA,sBACE,QAAC,UAAD,OACMI,IADN;AAEE,IAAA,MAAM,EAAE,MACNH,SAAS,KAAK,CAAC,CAACI,KAAhB,gBACE,QAAC,SAAD;AAAA;AAAA;AAAA;AAAA,YADF,gBAGE,QAAC,QAAD;AAAU,MAAA,EAAE,EAAEJ,SAAS,GAAG,GAAH,GAAS;AAAhC;AAAA;AAAA;AAAA;AAAA;AANN;AAAA;AAAA;AAAA;AAAA,UADF;AAYD,CAnBM;;GAAMH,K;UAKOE,O;;;KALPF,K","sourcesContent":["import { ComponentType } from \"react\";\nimport { Redirect, Route as ReactRoute, RouteProps } from \"react-router-dom\";\nimport { useAuth } from \"../providers/Auth\";\n\ninterface Props extends RouteProps {\n  isPrivate?: boolean;\n  component: ComponentType;\n}\n\nexport const Route = ({\n  isPrivate = false,\n  component: Component,\n  ...rest\n}: Props) => {\n  const { token } = useAuth();\n\n  return (\n    <ReactRoute\n      {...rest}\n      render={() =>\n        isPrivate === !!token ? (\n          <Component />\n        ) : (\n          <Redirect to={isPrivate ? \"/\" : \"/dashboard\"} />\n        )\n      }\n    />\n  );\n};\n"]},"metadata":{},"sourceType":"module"}