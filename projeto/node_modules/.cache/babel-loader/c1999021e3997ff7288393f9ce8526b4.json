{"ast":null,"code":"var _jsxFileName = \"/home/pierre/Documentos/projects/Q2/sprint6/icash/src/providers/CreditCards/index.tsx\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport { createContext, useState, useEffect, useContext } from \"react\";\nimport api from \"../../services/api\";\nimport { useAuth } from \"../../providers/Auth\";\nimport jwt_decode from \"jwt-decode\";\nimport toast from \"react-hot-toast\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CreditCardsContext = /*#__PURE__*/createContext({});\nexport const CreditCardsProvider = ({\n  children\n}) => {\n  _s();\n\n  const {\n    token\n  } = useAuth();\n  const [creditCards, setCreditCards] = useState([]);\n\n  if (token) {\n    const decoded = jwt_decode(token);\n    localStorage.setItem(\"@iCash: userId\", JSON.stringify(decoded.sub));\n  }\n\n  const userId = localStorage.getItem(\"@iCash: userId\");\n  useEffect(() => {\n    if (token) {\n      api.get(`/creditCards?userId=${userId}`, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      }).then(response => setCreditCards(response.data)).catch(_ => toast.error(\"Algo saiu mal. Tente novamente.\"));\n    }\n  }, [creditCards[0]]);\n\n  const addCreditCard = data => {\n    if (creditCards.length < 1) {\n      api.post(\"/creditCards\", { ...data,\n        userId\n      }, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      }).then(response => {\n        setCreditCards([...creditCards, response.data]);\n        toast.success(\"Cartão adicionado com sucesso!\");\n      }).catch(_ => toast.error(\"Algo saiu mal. Tente novamente.\"));\n    }\n  };\n\n  const removeCreditCard = cardId => {\n    api.delete(`/creditCards/${cardId}`, {\n      headers: {\n        Authorization: `Bearer ${token}`\n      }\n    }).then(response => {\n      const list = creditCards.filter(item => item.id !== cardId);\n      setCreditCards(list);\n      toast.success(\"Cartão excluído.\");\n    }).catch(_ => toast.error(\"Algo saiu mal. Tente novamente.\"));\n  };\n\n  const updateCreditCard = (data, cardId) => {\n    api.patch(`/creditCards/${cardId}`, data, {\n      headers: {\n        Authorization: `Bearer ${token}`\n      }\n    }).then(_ => toast.success(\"Dados atualizados com sucesso!\")).catch(_ => toast.error(\"Algo saiu mal. Tente novamente.\"));\n  };\n\n  return /*#__PURE__*/_jsxDEV(CreditCardsContext.Provider, {\n    value: {\n      creditCards,\n      addCreditCard,\n      removeCreditCard,\n      updateCreditCard\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 114,\n    columnNumber: 5\n  }, this);\n};\n\n_s(CreditCardsProvider, \"bM8yQn+nvugAvMgyJzR0ixBVKLU=\", false, function () {\n  return [useAuth];\n});\n\n_c = CreditCardsProvider;\nexport const useCreditCards = () => {\n  _s2();\n\n  return useContext(CreditCardsContext);\n};\n\n_s2(useCreditCards, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\n\nvar _c;\n\n$RefreshReg$(_c, \"CreditCardsProvider\");","map":{"version":3,"sources":["/home/pierre/Documentos/projects/Q2/sprint6/icash/src/providers/CreditCards/index.tsx"],"names":["createContext","useState","useEffect","useContext","api","useAuth","jwt_decode","toast","CreditCardsContext","CreditCardsProvider","children","token","creditCards","setCreditCards","decoded","localStorage","setItem","JSON","stringify","sub","userId","getItem","get","headers","Authorization","then","response","data","catch","_","error","addCreditCard","length","post","success","removeCreditCard","cardId","delete","list","filter","item","id","updateCreditCard","patch","useCreditCards"],"mappings":"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","sourcesContent":["import {\n  createContext,\n  useState,\n  useEffect,\n  useContext,\n  ReactNode,\n} from \"react\";\nimport api from \"../../services/api\";\nimport { useAuth } from \"../../providers/Auth\";\nimport jwt_decode from \"jwt-decode\";\nimport toast from \"react-hot-toast\";\nimport { CreditCardData } from \"../../types/creditCardData\";\n\ninterface Decoded {\n  email: string;\n  iat: number;\n  exp: number;\n  sub: string;\n}\n\ninterface UpdateCreditCard {\n  card_holder: string;\n  good_thru: string;\n  verification_code: string;\n}\n\ninterface CreditCardsProviderProps {\n  children: ReactNode;\n}\n\ninterface CreditCardsProviderData {\n  creditCards: CreditCardData[];\n  addCreditCard: (data: CreditCardData) => void;\n  removeCreditCard: (cardId: number | undefined) => void;\n  updateCreditCard: (\n    data: UpdateCreditCard,\n    cardId: number | undefined\n  ) => void;\n}\n\nconst CreditCardsContext = createContext<CreditCardsProviderData>(\n  {} as CreditCardsProviderData\n);\n\nexport const CreditCardsProvider = ({ children }: CreditCardsProviderProps) => {\n  const { token } = useAuth();\n\n  const [creditCards, setCreditCards] = useState<CreditCardData[]>([]);\n\n  if (token) {\n    const decoded = jwt_decode<Decoded>(token);\n    localStorage.setItem(\"@iCash: userId\", JSON.stringify(decoded.sub));\n  }\n\n  const userId = localStorage.getItem(\"@iCash: userId\");\n\n  useEffect(() => {\n    if (token) {\n      api\n        .get<CreditCardData[]>(`/creditCards?userId=${userId}`, {\n          headers: { Authorization: `Bearer ${token}` },\n        })\n        .then((response) => setCreditCards(response.data))\n        .catch((_) => toast.error(\"Algo saiu mal. Tente novamente.\"));\n    }\n  }, [creditCards[0]]);\n\n  const addCreditCard = (data: CreditCardData) => {\n    if (creditCards.length < 1) {\n      api\n        .post(\n          \"/creditCards\",\n          { ...data, userId },\n          {\n            headers: { Authorization: `Bearer ${token}` },\n          }\n        )\n        .then((response) => {\n          setCreditCards([...creditCards, response.data]);\n          toast.success(\"Cartão adicionado com sucesso!\");\n        })\n        .catch((_) => toast.error(\"Algo saiu mal. Tente novamente.\"));\n    }\n  };\n\n  const removeCreditCard = (cardId: number | undefined) => {\n    api\n      .delete(`/creditCards/${cardId}`, {\n        headers: { Authorization: `Bearer ${token}` },\n      })\n      .then((response) => {\n        const list = creditCards.filter((item) => item.id !== cardId);\n        setCreditCards(list);\n        toast.success(\"Cartão excluído.\");\n      })\n      .catch((_) => toast.error(\"Algo saiu mal. Tente novamente.\"));\n  };\n\n  const updateCreditCard = (\n    data: UpdateCreditCard,\n    cardId: number | undefined\n  ) => {\n    api\n      .patch(`/creditCards/${cardId}`, data, {\n        headers: {\n          Authorization: `Bearer ${token}`,\n        },\n      })\n      .then((_) => toast.success(\"Dados atualizados com sucesso!\"))\n      .catch((_) => toast.error(\"Algo saiu mal. Tente novamente.\"));\n  };\n\n  return (\n    <CreditCardsContext.Provider\n      value={{ creditCards, addCreditCard, removeCreditCard, updateCreditCard }}\n    >\n      {children}\n    </CreditCardsContext.Provider>\n  );\n};\n\nexport const useCreditCards = () => useContext(CreditCardsContext);\n"]},"metadata":{},"sourceType":"module"}