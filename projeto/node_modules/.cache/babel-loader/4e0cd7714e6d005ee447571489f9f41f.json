{"ast":null,"code":"var _jsxFileName = \"/home/pierre/Documentos/projects/Q2/sprint6/icash/src/providers/store-register/index.tsx\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport { createContext, useContext, useState } from \"react\";\nimport toast from \"react-hot-toast\";\nimport api from \"../../services/api\";\nimport { useAuth } from \"../Auth\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst StoreRegisterContext = /*#__PURE__*/createContext({});\nexport const StoreRegisterProvider = ({\n  children\n}) => {\n  _s();\n\n  const [showModalStore, setShowModalStore] = useState(false);\n  const {\n    token\n  } = useAuth();\n  console.log(token);\n\n  const storeRegister = (data, setShowModalStore) => {\n    api.post('/stores', data, {\n      headers: {\n        Authorization: `Bearer ${token}`\n      }\n    }).then(() => {\n      toast.success('Loja Cadastrada');\n      setShowModalStore(false);\n    }).catch(() => toast.error('Erro ao cadastrar loja'));\n  };\n\n  const storeUpdate = (data, setShowModalStore) => {\n    api.patch('/stores', data, {\n      headers: {\n        Authorization: `Bearer ${token}`\n      }\n    }).then(() => {\n      toast.success(\"Dados atualizados\");\n      setShowModalStore(false);\n    }).catch(() => toast.error(\"Erro ao atualizar dados\"));\n  };\n\n  return /*#__PURE__*/_jsxDEV(StoreRegisterContext.Provider, {\n    value: {\n      storeUpdate,\n      storeRegister,\n      setShowModalStore,\n      showModalStore\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 9\n  }, this);\n};\n\n_s(StoreRegisterProvider, \"jMpOpAn0ghZ3JAAO34c7bMGqSnA=\", false, function () {\n  return [useAuth];\n});\n\n_c = StoreRegisterProvider;\nexport const useStoreRegister = () => {\n  _s2();\n\n  return useContext(StoreRegisterContext);\n};\n\n_s2(useStoreRegister, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\n\nvar _c;\n\n$RefreshReg$(_c, \"StoreRegisterProvider\");","map":{"version":3,"sources":["/home/pierre/Documentos/projects/Q2/sprint6/icash/src/providers/store-register/index.tsx"],"names":["createContext","useContext","useState","toast","api","useAuth","StoreRegisterContext","StoreRegisterProvider","children","showModalStore","setShowModalStore","token","console","log","storeRegister","data","post","headers","Authorization","then","success","catch","error","storeUpdate","patch","useStoreRegister"],"mappings":";;;;AAAA,SAASA,aAAT,EAAmCC,UAAnC,EAA+CC,QAA/C,QAA+D,OAA/D;AACA,OAAOC,KAAP,MAAkB,iBAAlB;AACA,OAAOC,GAAP,MAAgB,oBAAhB;AAEA,SAASC,OAAT,QAAwB,SAAxB;;AAeA,MAAMC,oBAAoB,gBAAGN,aAAa,CAAoB,EAApB,CAA1C;AAEA,OAAO,MAAMO,qBAAqB,GAAG,CAAC;AAACC,EAAAA;AAAD,CAAD,KAAoC;AAAA;;AAErE,QAAM,CAACC,cAAD,EAAiBC,iBAAjB,IAAsCR,QAAQ,CAAU,KAAV,CAApD;AAEA,QAAM;AAACS,IAAAA;AAAD,MAAWN,OAAO,EAAxB;AACAO,EAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;;AAEA,QAAMG,aAAa,GAAG,CAACC,IAAD,EAAeL,iBAAf,KAAoF;AACtGN,IAAAA,GAAG,CACFY,IADD,CACM,SADN,EACiBD,IADjB,EAEC;AAAEE,MAAAA,OAAO,EACN;AAAEC,QAAAA,aAAa,EAAG,UAASP,KAAM;AAAjC;AADH,KAFD,EAKKQ,IALL,CAKU,MAAM;AACRhB,MAAAA,KAAK,CAACiB,OAAN,CAAc,iBAAd;AACAV,MAAAA,iBAAiB,CAAC,KAAD,CAAjB;AACH,KARL,EASKW,KATL,CASW,MAAKlB,KAAK,CAACmB,KAAN,CAAY,wBAAZ,CAThB;AAUH,GAXD;;AAaA,QAAMC,WAAW,GAAG,CAACR,IAAD,EAAcL,iBAAd,KAAmF;AAEnGN,IAAAA,GAAG,CACFoB,KADD,CACO,SADP,EACiBT,IADjB,EAEA;AAAEE,MAAAA,OAAO,EACL;AAACC,QAAAA,aAAa,EAAG,UAASP,KAAM;AAAhC;AADJ,KAFA,EAKCQ,IALD,CAKM,MAAM;AACRhB,MAAAA,KAAK,CAACiB,OAAN,CAAc,mBAAd;AACAV,MAAAA,iBAAiB,CAAC,KAAD,CAAjB;AAEH,KATD,EAUCW,KAVD,CAUO,MAAKlB,KAAK,CAACmB,KAAN,CAAY,yBAAZ,CAVZ;AAYH,GAdD;;AAgBA,sBACI,QAAC,oBAAD,CAAsB,QAAtB;AAA+B,IAAA,KAAK,EAAI;AAAEC,MAAAA,WAAF;AAAeT,MAAAA,aAAf;AAA8BJ,MAAAA,iBAA9B;AAAiDD,MAAAA;AAAjD,KAAxC;AAAA,cACKD;AADL;AAAA;AAAA;AAAA;AAAA,UADJ;AAMH,CA1CM;;GAAMD,qB;UAIQF,O;;;KAJRE,qB;AA4Cb,OAAO,MAAMkB,gBAAgB,GAAG;AAAA;;AAAA,SAAMxB,UAAU,CAACK,oBAAD,CAAhB;AAAA,CAAzB;;IAAMmB,gB","sourcesContent":["import { createContext, ReactNode, useContext, useState } from \"react\"\nimport toast from \"react-hot-toast\"\nimport api from \"../../services/api\"\nimport { IData } from \"../../types/storeRegister\";\nimport { useAuth } from \"../Auth\";\n\ninterface StoreRegisterProps {\n    children: ReactNode;\n}\n\n\n\ninterface StoreRegisterData {\n     storeRegister: (data: IData, setshowModalStore: React.Dispatch<React.SetStateAction<boolean>> ) => void;\n    showModalStore: boolean;\n    setShowModalStore: React.Dispatch<React.SetStateAction<boolean>>;\n    storeUpdate: (data: IData, setshowModalStore: React.Dispatch<React.SetStateAction<boolean>> ) => void;\n}\n\nconst StoreRegisterContext = createContext<StoreRegisterData>({} as StoreRegisterData);\n\nexport const StoreRegisterProvider = ({children}: StoreRegisterProps) => {\n\n    const [showModalStore, setShowModalStore] = useState<boolean>(false);\n\n    const {token } = useAuth();\n    console.log(token)\n\n    const storeRegister = (data: IData , setShowModalStore: React.Dispatch<React.SetStateAction<boolean>>) => {\n        api\n        .post('/stores', data,\n         { headers: \n            { Authorization: `Bearer ${token}`}\n        })\n            .then(() => {\n                toast.success('Loja Cadastrada');\n                setShowModalStore(false);\n            })\n            .catch(()=> toast.error('Erro ao cadastrar loja'))\n    }\n\n    const storeUpdate = (data: IData, setShowModalStore: React.Dispatch<React.SetStateAction<boolean>>) => {\n\n        api\n        .patch('/stores',data ,\n        { headers: \n            {Authorization: `Bearer ${token}`}\n        })\n        .then(() => {\n            toast.success(\"Dados atualizados\");\n            setShowModalStore(false);\n\n        })\n        .catch(()=> toast.error(\"Erro ao atualizar dados\"))\n\n    }\n\n    return (\n        <StoreRegisterContext.Provider value = {{ storeUpdate, storeRegister, setShowModalStore, showModalStore }} >\n            {children}\n        </StoreRegisterContext.Provider>\n\n    )\n}\n\nexport const useStoreRegister = () => useContext(StoreRegisterContext);"]},"metadata":{},"sourceType":"module"}