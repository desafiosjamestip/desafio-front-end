{"ast":null,"code":"var _jsxFileName = \"/home/pierre/Documentos/projects/novo/desafio-frontend/src/components/FormUserRegister/index.tsx\",\n    _s = $RefreshSig$();\n\nimport { yupResolver } from \"@hookform/resolvers/yup\";\nimport { useForm } from \"react-hook-form\";\nimport * as yup from \"yup\";\nimport { Link } from \"react-router-dom\";\nimport { useHistory } from \"react-router\";\nimport { Input, InputPassword } from \"../Input\";\nimport { FormContainer, InputHidden } from \"./styles\";\nimport { useRegisterUser } from \"../../providers/UserRegisterProvider\";\nimport { useProducts } from \"../../providers/Products\";\nimport { useEffect } from \"react\";\n/*\nFunção que retora o Formulário que aparece na page Register (cadastro de usuários)\n\nPor facilidade deixei como \"automático\" (em um campo oculto abaixo do botão de submit) \no incremento do id, através do length do state dos produtos (sim, parece estranho), \npois a minha api é fake e tem sérias limitações.\n\nCaso não tivesse o id incrementado automáticamente, o usuário correria o risco, no ato do cadastro,\nde ter que ir tentando usar um id livre...\n\nTem um validador de regex (regex da senha alpha numérica), pois já tive problemas com\nregex em typescript, então resolvi sempre deixar esse validador\n*/\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const FormUserRegister = () => {\n  _s();\n\n  var _errors$name, _errors$email, _errors$password, _errors$passwordConfi, _errors$passwordConfi2;\n\n  const {\n    userRegister\n  } = useRegisterUser();\n  const {\n    store,\n    loadStore\n  } = useProducts();\n  const history = useHistory();\n  const regex = /^(?=.*?[A-Z])(?=.*?[a-z])(?=.*?[0-9])(?=.*?[#?!@$%^&*-])/;\n  const validator = new RegExp(regex);\n  const schema = yup.object().shape({\n    name: yup.string().required(\"Campo obrigatório\"),\n    email: yup.string().email(\"Email inválido\").required(\"Campo obrigatório\"),\n    password: yup.string().min(6, \"Senha deve ter no mínimo 6 digitos\").required(\"Campo obrigatório\").matches(validator, \"Senha deve ter pelo menos um caracter minúsculo, um maiúsculo, um número e um caracter especial\"),\n    passwordConfirm: yup.string().oneOf([yup.ref(\"password\")], \"Senha errada\").required(\"Campo obrigatório\"),\n    id: yup.number()\n  });\n  /*\n  O useEffect abaixo tem a finalidade de atualizar o state de produtos (store) para fazer o \n  incremento do id com base no length dos produtos.\n  */\n\n  useEffect(() => {\n    loadStore();\n  }, []);\n  console.log(store.length);\n  const {\n    register,\n    handleSubmit,\n    reset,\n    formState: {\n      errors\n    }\n  } = useForm({\n    resolver: yupResolver(schema)\n  });\n  /*\n  onSubmitFunction - envia os dados do form de register para o provider UserRegisterProvider\n  */\n\n  const onSubmitFunction = data => {\n    userRegister(data, history);\n    reset();\n  };\n\n  return /*#__PURE__*/_jsxDEV(FormContainer, {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit(onSubmitFunction),\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [\"Cadastro \", /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"register\",\n          children: \"Usu\\xE1rio\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 20\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Input, {\n        type: \"text\",\n        placeholder: \"Nome\",\n        register: register,\n        name: \"name\",\n        error: (_errors$name = errors.name) === null || _errors$name === void 0 ? void 0 : _errors$name.message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Input, {\n        type: \"email\",\n        placeholder: \"Email\",\n        register: register,\n        name: \"email\",\n        error: (_errors$email = errors.email) === null || _errors$email === void 0 ? void 0 : _errors$email.message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(InputPassword, {\n        type: \"password\",\n        placeholder: \"Senha\",\n        register: register,\n        name: \"password\",\n        error: (_errors$password = errors.password) === null || _errors$password === void 0 ? void 0 : _errors$password.message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(InputPassword, {\n        type: \"password\",\n        placeholder: \"Confirmar senha\",\n        register: register,\n        name: \"passwordConfirm\",\n        error: (_errors$passwordConfi = errors.passwordConfirm) === null || _errors$passwordConfi === void 0 ? void 0 : _errors$passwordConfi.message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"button\",\n        type: \"submit\",\n        children: \"Enviar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/login\",\n        className: \"account\",\n        children: /*#__PURE__*/_jsxDEV(\"h5\", {\n          children: \"J\\xE1 tenho conta\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(InputHidden, {\n        className: \"hiddenId\",\n        children: /*#__PURE__*/_jsxDEV(Input, {\n          type: \"number\",\n          placeholder: \"id\",\n          register: register,\n          name: \"id\",\n          value: store.length + 1,\n          error: (_errors$passwordConfi2 = errors.passwordConfirm) === null || _errors$passwordConfi2 === void 0 ? void 0 : _errors$passwordConfi2.message\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 81,\n    columnNumber: 5\n  }, this);\n};\n\n_s(FormUserRegister, \"DSeSoVdqIaqq+7LiNqXxCcZO6LE=\", false, function () {\n  return [useRegisterUser, useProducts, useHistory, useForm];\n});\n\n_c = FormUserRegister;\n\nvar _c;\n\n$RefreshReg$(_c, \"FormUserRegister\");","map":{"version":3,"sources":["/home/pierre/Documentos/projects/novo/desafio-frontend/src/components/FormUserRegister/index.tsx"],"names":["yupResolver","useForm","yup","Link","useHistory","Input","InputPassword","FormContainer","InputHidden","useRegisterUser","useProducts","useEffect","FormUserRegister","userRegister","store","loadStore","history","regex","validator","RegExp","schema","object","shape","name","string","required","email","password","min","matches","passwordConfirm","oneOf","ref","id","number","console","log","length","register","handleSubmit","reset","formState","errors","resolver","onSubmitFunction","data","message"],"mappings":";;;AAAA,SAASA,WAAT,QAA4B,yBAA5B;AACA,SAASC,OAAT,QAAwB,iBAAxB;AACA,OAAO,KAAKC,GAAZ,MAAqB,KAArB;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,SAASC,UAAT,QAA2B,cAA3B;AACA,SAASC,KAAT,EAAgBC,aAAhB,QAAqC,UAArC;AACA,SAASC,aAAT,EAAwBC,WAAxB,QAA2C,UAA3C;AACA,SAASC,eAAT,QAAgC,sCAAhC;AAEA,SAASC,WAAT,QAA4B,0BAA5B;AACA,SAASC,SAAT,QAA0B,OAA1B;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA,OAAO,MAAMC,gBAAgB,GAAG,MAAM;AAAA;;AAAA;;AACpC,QAAM;AAAEC,IAAAA;AAAF,MAAmBJ,eAAe,EAAxC;AACA,QAAM;AAAEK,IAAAA,KAAF;AAASC,IAAAA;AAAT,MAAuBL,WAAW,EAAxC;AACA,QAAMM,OAAO,GAAGZ,UAAU,EAA1B;AAEA,QAAMa,KAAK,GAAG,0DAAd;AACA,QAAMC,SAAS,GAAG,IAAIC,MAAJ,CAAWF,KAAX,CAAlB;AAEA,QAAMG,MAAM,GAAGlB,GAAG,CAACmB,MAAJ,GAAaC,KAAb,CAAmB;AAChCC,IAAAA,IAAI,EAAErB,GAAG,CAACsB,MAAJ,GAAaC,QAAb,CAAsB,mBAAtB,CAD0B;AAEhCC,IAAAA,KAAK,EAAExB,GAAG,CAACsB,MAAJ,GAAaE,KAAb,CAAmB,gBAAnB,EAAqCD,QAArC,CAA8C,mBAA9C,CAFyB;AAGhCE,IAAAA,QAAQ,EAAEzB,GAAG,CACVsB,MADO,GAEPI,GAFO,CAEH,CAFG,EAEA,oCAFA,EAGPH,QAHO,CAGE,mBAHF,EAIPI,OAJO,CAKNX,SALM,EAMN,iGANM,CAHsB;AAWhCY,IAAAA,eAAe,EAAE5B,GAAG,CACjBsB,MADc,GAEdO,KAFc,CAER,CAAC7B,GAAG,CAAC8B,GAAJ,CAAQ,UAAR,CAAD,CAFQ,EAEe,cAFf,EAGdP,QAHc,CAGL,mBAHK,CAXe;AAehCQ,IAAAA,EAAE,EAAE/B,GAAG,CAACgC,MAAJ;AAf4B,GAAnB,CAAf;AAkBA;AACF;AACA;AACA;;AAEEvB,EAAAA,SAAS,CAAC,MAAM;AACdI,IAAAA,SAAS;AACV,GAFQ,EAEN,EAFM,CAAT;AAGAoB,EAAAA,OAAO,CAACC,GAAR,CAAYtB,KAAK,CAACuB,MAAlB;AACA,QAAM;AACJC,IAAAA,QADI;AAEJC,IAAAA,YAFI;AAGJC,IAAAA,KAHI;AAIJC,IAAAA,SAAS,EAAE;AAAEC,MAAAA;AAAF;AAJP,MAKFzC,OAAO,CAAC;AACV0C,IAAAA,QAAQ,EAAE3C,WAAW,CAACoB,MAAD;AADX,GAAD,CALX;AASA;AACF;AACA;;AAEE,QAAMwB,gBAAgB,GAAIC,IAAD,IAA4B;AACnDhC,IAAAA,YAAY,CAACgC,IAAD,EAAO7B,OAAP,CAAZ;AACAwB,IAAAA,KAAK;AACN,GAHD;;AAKA,sBACE,QAAC,aAAD;AAAA,2BACE;AAAM,MAAA,QAAQ,EAAED,YAAY,CAACK,gBAAD,CAA5B;AAAA,8BACE;AAAA,6CACW;AAAM,UAAA,SAAS,EAAC,UAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADX;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAIE,QAAC,KAAD;AACE,QAAA,IAAI,EAAC,MADP;AAEE,QAAA,WAAW,EAAC,MAFd;AAGE,QAAA,QAAQ,EAAEN,QAHZ;AAIE,QAAA,IAAI,EAAC,MAJP;AAKE,QAAA,KAAK,kBAAEI,MAAM,CAACnB,IAAT,iDAAE,aAAauB;AALtB;AAAA;AAAA;AAAA;AAAA,cAJF,eAWE,QAAC,KAAD;AACE,QAAA,IAAI,EAAC,OADP;AAEE,QAAA,WAAW,EAAC,OAFd;AAGE,QAAA,QAAQ,EAAER,QAHZ;AAIE,QAAA,IAAI,EAAC,OAJP;AAKE,QAAA,KAAK,mBAAEI,MAAM,CAAChB,KAAT,kDAAE,cAAcoB;AALvB;AAAA;AAAA;AAAA;AAAA,cAXF,eAkBE,QAAC,aAAD;AACE,QAAA,IAAI,EAAC,UADP;AAEE,QAAA,WAAW,EAAC,OAFd;AAGE,QAAA,QAAQ,EAAER,QAHZ;AAIE,QAAA,IAAI,EAAC,UAJP;AAKE,QAAA,KAAK,sBAAEI,MAAM,CAACf,QAAT,qDAAE,iBAAiBmB;AAL1B;AAAA;AAAA;AAAA;AAAA,cAlBF,eAyBE,QAAC,aAAD;AACE,QAAA,IAAI,EAAC,UADP;AAEE,QAAA,WAAW,EAAC,iBAFd;AAGE,QAAA,QAAQ,EAAER,QAHZ;AAIE,QAAA,IAAI,EAAC,iBAJP;AAKE,QAAA,KAAK,2BAAEI,MAAM,CAACZ,eAAT,0DAAE,sBAAwBgB;AALjC;AAAA;AAAA;AAAA;AAAA,cAzBF,eAgCE;AAAQ,QAAA,SAAS,EAAC,QAAlB;AAA2B,QAAA,IAAI,EAAC,QAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAhCF,eAmCE,QAAC,IAAD;AAAM,QAAA,EAAE,EAAC,QAAT;AAAkB,QAAA,SAAS,EAAC,SAA5B;AAAA,+BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAnCF,eAsCE,QAAC,WAAD;AAAa,QAAA,SAAS,EAAC,UAAvB;AAAA,+BACE,QAAC,KAAD;AACE,UAAA,IAAI,EAAC,QADP;AAEE,UAAA,WAAW,EAAC,IAFd;AAGE,UAAA,QAAQ,EAAER,QAHZ;AAIE,UAAA,IAAI,EAAC,IAJP;AAKE,UAAA,KAAK,EAAExB,KAAK,CAACuB,MAAN,GAAe,CALxB;AAME,UAAA,KAAK,4BAAEK,MAAM,CAACZ,eAAT,2DAAE,uBAAwBgB;AANjC;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAtCF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAqDD,CA1GM;;GAAMlC,gB;UACcH,e,EACIC,W,EACbN,U,EAqCZH,O;;;KAxCOW,gB","sourcesContent":["import { yupResolver } from \"@hookform/resolvers/yup\";\nimport { useForm } from \"react-hook-form\";\nimport * as yup from \"yup\";\nimport { Link } from \"react-router-dom\";\nimport { useHistory } from \"react-router\";\nimport { Input, InputPassword } from \"../Input\";\nimport { FormContainer, InputHidden } from \"./styles\";\nimport { useRegisterUser } from \"../../providers/UserRegisterProvider\";\nimport { UserRegisterData } from \"../../types/RegisterUser\";\nimport { useProducts } from \"../../providers/Products\";\nimport { useEffect } from \"react\";\n\n/*\nFunção que retora o Formulário que aparece na page Register (cadastro de usuários)\n\nPor facilidade deixei como \"automático\" (em um campo oculto abaixo do botão de submit) \no incremento do id, através do length do state dos produtos (sim, parece estranho), \npois a minha api é fake e tem sérias limitações.\n\nCaso não tivesse o id incrementado automáticamente, o usuário correria o risco, no ato do cadastro,\nde ter que ir tentando usar um id livre...\n\nTem um validador de regex (regex da senha alpha numérica), pois já tive problemas com\nregex em typescript, então resolvi sempre deixar esse validador\n*/\n\nexport const FormUserRegister = () => {\n  const { userRegister } = useRegisterUser();\n  const { store, loadStore } = useProducts();\n  const history = useHistory();\n\n  const regex = /^(?=.*?[A-Z])(?=.*?[a-z])(?=.*?[0-9])(?=.*?[#?!@$%^&*-])/;\n  const validator = new RegExp(regex);\n\n  const schema = yup.object().shape({\n    name: yup.string().required(\"Campo obrigatório\"),\n    email: yup.string().email(\"Email inválido\").required(\"Campo obrigatório\"),\n    password: yup\n      .string()\n      .min(6, \"Senha deve ter no mínimo 6 digitos\")\n      .required(\"Campo obrigatório\")\n      .matches(\n        validator,\n        \"Senha deve ter pelo menos um caracter minúsculo, um maiúsculo, um número e um caracter especial\"\n      ),\n    passwordConfirm: yup\n      .string()\n      .oneOf([yup.ref(\"password\")], \"Senha errada\")\n      .required(\"Campo obrigatório\"),\n    id: yup.number(),\n  });\n\n  /*\n  O useEffect abaixo tem a finalidade de atualizar o state de produtos (store) para fazer o \n  incremento do id com base no length dos produtos.\n  */\n\n  useEffect(() => {\n    loadStore();\n  }, []);\n  console.log(store.length);\n  const {\n    register,\n    handleSubmit,\n    reset,\n    formState: { errors },\n  } = useForm({\n    resolver: yupResolver(schema),\n  });\n\n  /*\n  onSubmitFunction - envia os dados do form de register para o provider UserRegisterProvider\n  */\n\n  const onSubmitFunction = (data: UserRegisterData) => {\n    userRegister(data, history);\n    reset();\n  };\n\n  return (\n    <FormContainer>\n      <form onSubmit={handleSubmit(onSubmitFunction)}>\n        <h2>\n          Cadastro <span className=\"register\">Usuário</span>\n        </h2>\n        <Input\n          type=\"text\"\n          placeholder=\"Nome\"\n          register={register}\n          name=\"name\"\n          error={errors.name?.message}\n        />\n        <Input\n          type=\"email\"\n          placeholder=\"Email\"\n          register={register}\n          name=\"email\"\n          error={errors.email?.message}\n        />\n        <InputPassword\n          type=\"password\"\n          placeholder=\"Senha\"\n          register={register}\n          name=\"password\"\n          error={errors.password?.message}\n        />\n        <InputPassword\n          type=\"password\"\n          placeholder=\"Confirmar senha\"\n          register={register}\n          name=\"passwordConfirm\"\n          error={errors.passwordConfirm?.message}\n        />\n        <button className=\"button\" type=\"submit\">\n          Enviar\n        </button>\n        <Link to=\"/login\" className=\"account\">\n          <h5>Já tenho conta</h5>\n        </Link>\n        <InputHidden className=\"hiddenId\">\n          <Input\n            type=\"number\"\n            placeholder=\"id\"\n            register={register}\n            name=\"id\"\n            value={store.length + 1}\n            error={errors.passwordConfirm?.message}\n          />\n        </InputHidden>\n      </form>\n    </FormContainer>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}