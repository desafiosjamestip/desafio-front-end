{"ast":null,"code":"var _jsxFileName = \"/home/pierre/Documentos/projects/Q2/sprint6/icash/src/providers/Register/index.tsx\",\n    _s = $RefreshSig$();\n\nimport { createContext, useContext } from \"react\";\nimport api from \"../../services/api\";\nimport toast from \"react-hot-toast\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst RegisterContext = /*#__PURE__*/createContext({});\nexport const RegisterProvider = ({\n  children\n}) => {\n  const registerUser = (data, history) => {\n    api.post(\"/register\", data).then(_ => {\n      toast.success(\"Usuário criado com sucesso. Faça Login!\");\n      return history.push(\"/login\");\n    }).catch(err => {\n      console.log(\"ERRO\", err);\n      toast.error(\"Algo saiu mal. Tente novamente.\");\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(RegisterContext.Provider, {\n    value: {\n      registerUser\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n};\n_c = RegisterProvider;\nexport const useRegister = () => {\n  _s();\n\n  return useContext(RegisterContext);\n};\n\n_s(useRegister, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\n\nvar _c;\n\n$RefreshReg$(_c, \"RegisterProvider\");","map":{"version":3,"sources":["/home/pierre/Documentos/projects/Q2/sprint6/icash/src/providers/Register/index.tsx"],"names":["createContext","useContext","api","toast","RegisterContext","RegisterProvider","children","registerUser","data","history","post","then","_","success","push","catch","err","console","log","error","useRegister"],"mappings":";;;AAAA,SAASA,aAAT,EAAwBC,UAAxB,QAAqD,OAArD;AACA,OAAOC,GAAP,MAAgB,oBAAhB;AAGA,OAAOC,KAAP,MAAkB,iBAAlB;;AAUA,MAAMC,eAAe,gBAAGJ,aAAa,CACnC,EADmC,CAArC;AAIA,OAAO,MAAMK,gBAAgB,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAyC;AACvE,QAAMC,YAAY,GAAG,CAACC,IAAD,EAAuBC,OAAvB,KAA4C;AAC/DP,IAAAA,GAAG,CACAQ,IADH,CACQ,WADR,EACqBF,IADrB,EAEGG,IAFH,CAESC,CAAD,IAAO;AACXT,MAAAA,KAAK,CAACU,OAAN,CAAc,yCAAd;AACA,aAAOJ,OAAO,CAACK,IAAR,CAAa,QAAb,CAAP;AACD,KALH,EAMGC,KANH,CAMUC,GAAD,IAAS;AACdC,MAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ,EAAoBF,GAApB;AACAb,MAAAA,KAAK,CAACgB,KAAN,CAAY,iCAAZ;AACD,KATH;AAUD,GAXD;;AAYA,sBACE,QAAC,eAAD,CAAiB,QAAjB;AAA0B,IAAA,KAAK,EAAE;AAAEZ,MAAAA;AAAF,KAAjC;AAAA,cACGD;AADH;AAAA;AAAA;AAAA;AAAA,UADF;AAKD,CAlBM;KAAMD,gB;AAoBb,OAAO,MAAMe,WAAW,GAAG;AAAA;;AAAA,SAAMnB,UAAU,CAACG,eAAD,CAAhB;AAAA,CAApB;;GAAMgB,W","sourcesContent":["import { createContext, useContext, ReactNode } from \"react\";\nimport api from \"../../services/api\";\nimport { History } from \"history\";\nimport { userSignUpData } from \"../../types/userSignUpData\";\nimport toast from \"react-hot-toast\";\n\ninterface RegisterProviderProps {\n  children: ReactNode;\n}\n\ninterface RegisterProviderData {\n  registerUser: (data: userSignUpData, history: History) => void;\n}\n\nconst RegisterContext = createContext<RegisterProviderData>(\n  {} as RegisterProviderData\n);\n\nexport const RegisterProvider = ({ children }: RegisterProviderProps) => {\n  const registerUser = (data: userSignUpData, history: History) => {\n    api\n      .post(\"/register\", data)\n      .then((_) => {\n        toast.success(\"Usuário criado com sucesso. Faça Login!\");\n        return history.push(\"/login\");\n      })\n      .catch((err) => {\n        console.log(\"ERRO\", err);\n        toast.error(\"Algo saiu mal. Tente novamente.\");\n      });\n  };\n  return (\n    <RegisterContext.Provider value={{ registerUser }}>\n      {children}\n    </RegisterContext.Provider>\n  );\n};\n\nexport const useRegister = () => useContext(RegisterContext);\n"]},"metadata":{},"sourceType":"module"}