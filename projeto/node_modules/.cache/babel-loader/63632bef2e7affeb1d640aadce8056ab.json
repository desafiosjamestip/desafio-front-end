{"ast":null,"code":"var _jsxFileName = \"/home/pierre/Documentos/projects/novo/desafio-frontend/src/components/FormUserRegister/index.tsx\",\n    _s = $RefreshSig$();\n\nimport { yupResolver } from \"@hookform/resolvers/yup\";\nimport { useForm } from \"react-hook-form\";\nimport * as yup from \"yup\";\nimport { Link } from \"react-router-dom\";\nimport { useHistory } from \"react-router\";\nimport { Input } from \"../Input\";\nimport { FormContainer } from \"./styles\";\nimport { useRegisterUser } from \"../../providers/User\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const FormUserRegister = () => {\n  _s();\n\n  var _errors$name, _errors$email, _errors$password, _errors$passwordConfi, _errors$id;\n\n  const {\n    userRegister\n  } = useRegisterUser();\n  const history = useHistory();\n  const regex = /^(?=.*?[A-Z])(?=.*?[a-z])(?=.*?[0-9])(?=.*?[#?!@$%^&*-])/;\n  const validator = new RegExp(regex);\n  const schema = yup.object().shape({\n    name: yup.string().required(\"Campo obrigatório\"),\n    email: yup.string().email(\"Email inválido\").required(\"Campo obrigatório\"),\n    password: yup.string().min(6, \"Senha deve ter no mínimo 6 digitos\").required(\"Campo obrigatório\").matches(validator, \"Senha deve ter pelo menos um caracter minúsculo, um maiúsculo, um número e um caracter especial\"),\n    passwordConfirm: yup.string().oneOf([yup.ref(\"password\")], \"Senha errada\").required(\"Campo obrigatório\"),\n    id: yup.number()\n  });\n  const {\n    register,\n    handleSubmit,\n    reset,\n    formState: {\n      errors\n    }\n  } = useForm({\n    resolver: yupResolver(schema)\n  });\n\n  const onSubmitFunction = data => {\n    userRegister(data);\n    reset();\n  };\n\n  return /*#__PURE__*/_jsxDEV(FormContainer, {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit(onSubmitFunction),\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [\"Cadastro \", /*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"Usu\\xE1rio\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 20\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Input, {\n        type: \"text\",\n        placeholder: \"Nome\",\n        register: register,\n        name: \"name\",\n        error: (_errors$name = errors.name) === null || _errors$name === void 0 ? void 0 : _errors$name.message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Input, {\n        type: \"email\",\n        placeholder: \"Email\",\n        register: register,\n        name: \"email\",\n        error: (_errors$email = errors.email) === null || _errors$email === void 0 ? void 0 : _errors$email.message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Input, {\n        type: \"password\",\n        placeholder: \"Senha\",\n        register: register,\n        name: \"password\",\n        error: (_errors$password = errors.password) === null || _errors$password === void 0 ? void 0 : _errors$password.message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Input, {\n        type: \"password\",\n        placeholder: \"Confirmar senha\",\n        register: register,\n        name: \"passwordConfirm\",\n        error: (_errors$passwordConfi = errors.passwordConfirm) === null || _errors$passwordConfi === void 0 ? void 0 : _errors$passwordConfi.message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Input, {\n        type: \"id\",\n        placeholder: \"id\",\n        register: register,\n        name: \"id\",\n        error: (_errors$id = errors.id) === null || _errors$id === void 0 ? void 0 : _errors$id.message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Enviar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/login\",\n        className: \"account\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: \"J\\xE1 tenho conta\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n          src: \"#\",\n          alt: \"go-to-login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this);\n};\n\n_s(FormUserRegister, \"QuCWseTilxVfjfmILlGokPuGjBU=\", false, function () {\n  return [useRegisterUser, useHistory, useForm];\n});\n\n_c = FormUserRegister;\n\nvar _c;\n\n$RefreshReg$(_c, \"FormUserRegister\");","map":{"version":3,"sources":["/home/pierre/Documentos/projects/novo/desafio-frontend/src/components/FormUserRegister/index.tsx"],"names":["yupResolver","useForm","yup","Link","useHistory","Input","FormContainer","useRegisterUser","FormUserRegister","userRegister","history","regex","validator","RegExp","schema","object","shape","name","string","required","email","password","min","matches","passwordConfirm","oneOf","ref","id","number","register","handleSubmit","reset","formState","errors","resolver","onSubmitFunction","data","message"],"mappings":"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","sourcesContent":["import { yupResolver } from \"@hookform/resolvers/yup\";\nimport { useForm } from \"react-hook-form\";\nimport * as yup from \"yup\";\nimport { Link } from \"react-router-dom\";\nimport { useHistory } from \"react-router\";\nimport { Input } from \"../Input\";\nimport { FormContainer } from \"./styles\";\nimport { useRegisterUser } from \"../../providers/User\";\nimport { UserRegisterData } from \"../../types/RegisterUser\";\n\nexport const FormUserRegister = () => {\n  const { userRegister } = useRegisterUser();\n  const history = useHistory();\n\n  const regex = /^(?=.*?[A-Z])(?=.*?[a-z])(?=.*?[0-9])(?=.*?[#?!@$%^&*-])/;\n  const validator = new RegExp(regex);\n\n  const schema = yup.object().shape({\n    name: yup.string().required(\"Campo obrigatório\"),\n    email: yup.string().email(\"Email inválido\").required(\"Campo obrigatório\"),\n    password: yup\n      .string()\n      .min(6, \"Senha deve ter no mínimo 6 digitos\")\n      .required(\"Campo obrigatório\")\n      .matches(\n        validator,\n        \"Senha deve ter pelo menos um caracter minúsculo, um maiúsculo, um número e um caracter especial\"\n      ),\n    passwordConfirm: yup\n      .string()\n      .oneOf([yup.ref(\"password\")], \"Senha errada\")\n      .required(\"Campo obrigatório\"),\n    id: yup.number(),\n  });\n\n  const {\n    register,\n    handleSubmit,\n    reset,\n    formState: { errors },\n  } = useForm({\n    resolver: yupResolver(schema),\n  });\n\n  const onSubmitFunction = (data: UserRegisterData) => {\n    userRegister(data);\n    reset();\n  };\n\n  return (\n    <FormContainer>\n      <form onSubmit={handleSubmit(onSubmitFunction)}>\n        <h2>\n          Cadastro <span>Usuário</span>\n        </h2>\n        <Input\n          type=\"text\"\n          placeholder=\"Nome\"\n          register={register}\n          name=\"name\"\n          error={errors.name?.message}\n        />\n        <Input\n          type=\"email\"\n          placeholder=\"Email\"\n          register={register}\n          name=\"email\"\n          error={errors.email?.message}\n        />\n        <Input\n          type=\"password\"\n          placeholder=\"Senha\"\n          register={register}\n          name=\"password\"\n          error={errors.password?.message}\n        />\n        <Input\n          type=\"password\"\n          placeholder=\"Confirmar senha\"\n          register={register}\n          name=\"passwordConfirm\"\n          error={errors.passwordConfirm?.message}\n        />\n        <Input\n          type=\"id\"\n          placeholder=\"id\"\n          register={register}\n          name=\"id\"\n          error={errors.id?.message}\n        />\n        <button type=\"submit\">Enviar</button>\n        <Link to=\"/login\" className=\"account\">\n          <div>Já tenho conta</div>\n          <img src={\"#\"} alt=\"go-to-login\" />\n        </Link>\n      </form>\n    </FormContainer>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}