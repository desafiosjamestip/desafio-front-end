{"ast":null,"code":"var _jsxFileName = \"/home/pierre/Documentos/projects/novo/desafio-frontend/src/providers/Products/index.tsx\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport { createContext, useContext, useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const ProductsContext = /*#__PURE__*/createContext({});\nexport const ProductsProvider = ({\n  children\n}) => {\n  _s();\n\n  const [updateStore, setUpdateStore] = useState([]);\n  const [store, setStore] = useState(JSON.parse(localStorage.getItem(\"store\") || \"[]\"));\n\n  const registerProducts = data => {\n    setStore([...store, data]);\n  };\n\n  const updateProducts = data => {\n    setUpdateStore(store.filter(item => item[\"code\"] !== data[\"code\"]));\n    setStore([...updateStore]);\n  };\n\n  useEffect(() => {\n    localStorage.setItem(\"store\", JSON.stringify(store));\n  }, [store]);\n  console.log(store);\n  return /*#__PURE__*/_jsxDEV(ProductsContext.Provider, {\n    value: {\n      store,\n      setStore,\n      registerProducts,\n      updateProducts,\n      setUpdateStore,\n      updateStore\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ProductsProvider, \"ykzwGDbnvfs8+o1QWK1nFO8iArg=\");\n\n_c = ProductsProvider;\nexport const useProducts = () => {\n  _s2();\n\n  return useContext(ProductsContext);\n};\n\n_s2(useProducts, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\n\nvar _c;\n\n$RefreshReg$(_c, \"ProductsProvider\");","map":{"version":3,"sources":["/home/pierre/Documentos/projects/novo/desafio-frontend/src/providers/Products/index.tsx"],"names":["createContext","useContext","useEffect","useState","ProductsContext","ProductsProvider","children","updateStore","setUpdateStore","store","setStore","JSON","parse","localStorage","getItem","registerProducts","data","updateProducts","filter","item","setItem","stringify","console","log","useProducts"],"mappings":";;;;AAAA,SACEA,aADF,EAGEC,UAHF,EAIEC,SAJF,EAKEC,QALF,QAMO,OANP;;AAwBA,OAAO,MAAMC,eAAe,gBAAGJ,aAAa,CAC1C,EAD0C,CAArC;AAIP,OAAO,MAAMK,gBAAgB,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAyC;AAAA;;AACvE,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCL,QAAQ,CAAuB,EAAvB,CAA9C;AAEA,QAAM,CAACM,KAAD,EAAQC,QAAR,IAAoBP,QAAQ,CAChCQ,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,OAArB,KAAiC,IAA5C,CADgC,CAAlC;;AAIA,QAAMC,gBAAgB,GAAIC,IAAD,IAAwB;AAC/CN,IAAAA,QAAQ,CAAC,CAAC,GAAGD,KAAJ,EAAWO,IAAX,CAAD,CAAR;AACD,GAFD;;AAIA,QAAMC,cAAc,GAAID,IAAD,IAA8B;AACnDR,IAAAA,cAAc,CAACC,KAAK,CAACS,MAAN,CAAcC,IAAD,IAAUA,IAAI,CAAC,MAAD,CAAJ,KAAiBH,IAAI,CAAC,MAAD,CAA5C,CAAD,CAAd;AACAN,IAAAA,QAAQ,CAAC,CAAC,GAAGH,WAAJ,CAAD,CAAR;AACD,GAHD;;AAKAL,EAAAA,SAAS,CAAC,MAAM;AACdW,IAAAA,YAAY,CAACO,OAAb,CAAqB,OAArB,EAA8BT,IAAI,CAACU,SAAL,CAAeZ,KAAf,CAA9B;AACD,GAFQ,EAEN,CAACA,KAAD,CAFM,CAAT;AAIAa,EAAAA,OAAO,CAACC,GAAR,CAAYd,KAAZ;AACA,sBACE,QAAC,eAAD,CAAiB,QAAjB;AACE,IAAA,KAAK,EAAE;AACLA,MAAAA,KADK;AAELC,MAAAA,QAFK;AAGLK,MAAAA,gBAHK;AAILE,MAAAA,cAJK;AAKLT,MAAAA,cALK;AAMLD,MAAAA;AANK,KADT;AAAA,cAUGD;AAVH;AAAA;AAAA;AAAA;AAAA,UADF;AAcD,CAnCM;;GAAMD,gB;;KAAAA,gB;AAqCb,OAAO,MAAMmB,WAAW,GAAG;AAAA;;AAAA,SAAMvB,UAAU,CAACG,eAAD,CAAhB;AAAA,CAApB;;IAAMoB,W","sourcesContent":["import {\n  createContext,\n  ReactNode,\n  useContext,\n  useEffect,\n  useState,\n} from \"react\";\nimport { ProductsData } from \"../../types/ProductsData\";\nimport { UpdateProductsData } from \"../../types/UpdateProductsData\";\n\ninterface ProductsProviderProps {\n  children: ReactNode;\n}\n\ninterface ProductsDataProps {\n  store: ProductsData[] | UpdateProductsData[];\n  setStore: React.Dispatch<React.SetStateAction<ProductsData[]>>;\n  registerProducts: (data: ProductsData) => void;\n\n  updateStore: UpdateProductsData[];\n  setUpdateStore: React.Dispatch<React.SetStateAction<UpdateProductsData[]>>;\n  updateProducts: (data: UpdateProductsData) => void;\n}\n\nexport const ProductsContext = createContext<ProductsDataProps>(\n  {} as ProductsDataProps\n);\n\nexport const ProductsProvider = ({ children }: ProductsProviderProps) => {\n  const [updateStore, setUpdateStore] = useState<UpdateProductsData[]>([]);\n\n  const [store, setStore] = useState<ProductsData[] | UpdateProductsData[]>(\n    JSON.parse(localStorage.getItem(\"store\") || \"[]\")\n  );\n\n  const registerProducts = (data: ProductsData) => {\n    setStore([...store, data]);\n  };\n\n  const updateProducts = (data: UpdateProductsData) => {\n    setUpdateStore(store.filter((item) => item[\"code\"] !== data[\"code\"]));\n    setStore([...updateStore]);\n  };\n\n  useEffect(() => {\n    localStorage.setItem(\"store\", JSON.stringify(store));\n  }, [store]);\n\n  console.log(store);\n  return (\n    <ProductsContext.Provider\n      value={{\n        store,\n        setStore,\n        registerProducts,\n        updateProducts,\n        setUpdateStore,\n        updateStore,\n      }}\n    >\n      {children}\n    </ProductsContext.Provider>\n  );\n};\n\nexport const useProducts = () => useContext(ProductsContext);\n"]},"metadata":{},"sourceType":"module"}