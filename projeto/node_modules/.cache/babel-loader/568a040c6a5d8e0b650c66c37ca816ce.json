{"ast":null,"code":"var _jsxFileName = \"/home/pierre/Documentos/projects/Q2/sprint6/icash/src/components/searchStoresModal/index.tsx\",\n    _s = $RefreshSig$();\n\nimport { ModalWrapper, Stores } from \"./styles\";\nimport Modal from \"react-modal\";\nimport React, { useState } from \"react\";\nimport Button from \"../Button\";\nimport { useHistory } from \"react-router-dom\";\nimport { useStoreRegister } from \"../../providers/store-register\";\nimport \"./styles.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst SearchStoreModal = ({\n  modalIsOpen,\n  setIsOpen,\n  openModal\n}) => {\n  _s();\n\n  const {\n    stores\n  } = useStoreRegister();\n  const history = useHistory();\n  const [searchInput, setSearchInput] = useState(\"\");\n  const [filteredStores, setFilteredStores] = useState([]);\n\n  const closeModal = () => {\n    setIsOpen(false);\n  };\n\n  const handleModal = () => {\n    searchStores();\n    setSearchInput(\"\");\n  };\n\n  const searchStores = () => {\n    if (searchInput === \"\") return;\n    setFilteredStores([...filteredStores, ...stores.filter(store => store.name.toLowerCase().includes(searchInput.toLowerCase()) || store.category.toLowerCase().includes(searchInput.toLowerCase()))]);\n    setSearchInput(\"\");\n  };\n\n  const cleanSearch = () => {\n    setFilteredStores([]);\n    closeModal();\n  };\n\n  Modal.setAppElement(\"#root\");\n  return /*#__PURE__*/_jsxDEV(Modal, {\n    isOpen: modalIsOpen,\n    onRequestClose: closeModal,\n    className: \"SearchModal\",\n    children: /*#__PURE__*/_jsxDEV(ModalWrapper, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modalHeader\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Encontre lojas por nome ou categoria\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"closeModal\",\n          onClick: cleanSearch,\n          children: \"X\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          placeholder: \"nome da loja ou categoria\",\n          value: searchInput,\n          type: \"text\",\n          onChange: e => setSearchInput(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: handleModal,\n          children: \"Pesquisar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: cleanSearch,\n          children: \"Limpar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Stores, {\n        children: [filteredStores.length === 0 ? /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Busque por supermercado, farm\\xE1cia, posto de combust\\xEDvel, roupa, etc\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 13\n        }, this) : filteredStores.length === 1 ? /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: [filteredStores.length, \" loja encontrada oferece cashback:\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: [filteredStores.length, \" lojas encontradas oferecem cashback:\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 13\n        }, this), filteredStores && filteredStores.map((store, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"searchWrapper\",\n          children: /*#__PURE__*/_jsxDEV(\"ul\", {\n            children: /*#__PURE__*/_jsxDEV(\"li\", {\n              onClick: () => {\n                history.push(`/store/${store.id}`);\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"cashback\",\n                children: [\" \", store.cashback, \"% -\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 115,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                children: [\" \", store.name]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 116,\n                columnNumber: 21\n              }, this), \" \", store.category]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 110,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 17\n          }, this)\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 15\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 5\n  }, this);\n};\n\n_s(SearchStoreModal, \"9IBErBmQdy4yiJutiB4pn0pgnD8=\", false, function () {\n  return [useStoreRegister, useHistory];\n});\n\n_c = SearchStoreModal;\nexport default SearchStoreModal;\n\nvar _c;\n\n$RefreshReg$(_c, \"SearchStoreModal\");","map":{"version":3,"sources":["/home/pierre/Documentos/projects/Q2/sprint6/icash/src/components/searchStoresModal/index.tsx"],"names":["ModalWrapper","Stores","Modal","React","useState","Button","useHistory","useStoreRegister","SearchStoreModal","modalIsOpen","setIsOpen","openModal","stores","history","searchInput","setSearchInput","filteredStores","setFilteredStores","closeModal","handleModal","searchStores","filter","store","name","toLowerCase","includes","category","cleanSearch","setAppElement","e","target","value","length","map","index","push","id","cashback"],"mappings":";;;AAAA,SAASA,YAAT,EAAuBC,MAAvB,QAAqC,UAArC;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,OAAOC,KAAP,IAA0CC,QAA1C,QAA0D,OAA1D;AACA,OAAOC,MAAP,MAAmB,WAAnB;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA,SAASC,gBAAT,QAAiC,gCAAjC;AACA,OAAO,cAAP;;;AAsBA,MAAMC,gBAAgB,GAAG,CAAC;AACxBC,EAAAA,WADwB;AAExBC,EAAAA,SAFwB;AAGxBC,EAAAA;AAHwB,CAAD,KAIP;AAAA;;AAChB,QAAM;AAAEC,IAAAA;AAAF,MAAaL,gBAAgB,EAAnC;AACA,QAAMM,OAAO,GAAGP,UAAU,EAA1B;AACA,QAAM,CAACQ,WAAD,EAAcC,cAAd,IAAgCX,QAAQ,CAAS,EAAT,CAA9C;AACA,QAAM,CAACY,cAAD,EAAiBC,iBAAjB,IAAsCb,QAAQ,CAClD,EADkD,CAApD;;AAIA,QAAMc,UAAU,GAAG,MAAM;AACvBR,IAAAA,SAAS,CAAC,KAAD,CAAT;AACD,GAFD;;AAIA,QAAMS,WAAW,GAAG,MAAM;AACxBC,IAAAA,YAAY;AACZL,IAAAA,cAAc,CAAC,EAAD,CAAd;AACD,GAHD;;AAKA,QAAMK,YAAY,GAAG,MAAM;AACzB,QAAIN,WAAW,KAAK,EAApB,EAAwB;AACxBG,IAAAA,iBAAiB,CAAC,CAChB,GAAGD,cADa,EAEhB,GAAGJ,MAAM,CAACS,MAAP,CACAC,KAAD,IACEA,KAAK,CAACC,IAAN,CAAWC,WAAX,GAAyBC,QAAzB,CAAkCX,WAAW,CAACU,WAAZ,EAAlC,KACAF,KAAK,CAACI,QAAN,CAAeF,WAAf,GAA6BC,QAA7B,CAAsCX,WAAW,CAACU,WAAZ,EAAtC,CAHD,CAFa,CAAD,CAAjB;AAQAT,IAAAA,cAAc,CAAC,EAAD,CAAd;AACD,GAXD;;AAaA,QAAMY,WAAW,GAAG,MAAM;AACxBV,IAAAA,iBAAiB,CAAC,EAAD,CAAjB;AACAC,IAAAA,UAAU;AACX,GAHD;;AAKAhB,EAAAA,KAAK,CAAC0B,aAAN,CAAoB,OAApB;AAEA,sBACE,QAAC,KAAD;AACE,IAAA,MAAM,EAAEnB,WADV;AAEE,IAAA,cAAc,EAAES,UAFlB;AAGE,IAAA,SAAS,EAAC,aAHZ;AAAA,2BAKE,QAAC,YAAD;AAAA,8BACE;AAAK,QAAA,SAAS,EAAC,aAAf;AAAA,gCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAM,UAAA,SAAS,EAAC,YAAhB;AAA6B,UAAA,OAAO,EAAES,WAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF,eAKE;AACE,UAAA,WAAW,EAAC,2BADd;AAEE,UAAA,KAAK,EAAEb,WAFT;AAGE,UAAA,IAAI,EAAC,MAHP;AAIE,UAAA,QAAQ,EAAGe,CAAD,IACRd,cAAc,CAACc,CAAC,CAACC,MAAF,CAASC,KAAV;AALlB;AAAA;AAAA;AAAA;AAAA,gBALF,eAaE,QAAC,MAAD;AAAQ,UAAA,OAAO,EAAEZ,WAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAbF,eAcE,QAAC,MAAD;AAAQ,UAAA,OAAO,EAAEQ,WAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAdF;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAiBE,QAAC,MAAD;AAAA,mBACGX,cAAc,CAACgB,MAAf,KAA0B,CAA1B,gBACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADD,GAKGhB,cAAc,CAACgB,MAAf,KAA0B,CAA1B,gBACF;AAAA,qBAAKhB,cAAc,CAACgB,MAApB;AAAA;AAAA;AAAA;AAAA;AAAA,gBADE,gBAGF;AAAA,qBACGhB,cAAc,CAACgB,MADlB;AAAA;AAAA;AAAA;AAAA;AAAA,gBATJ,EAaGhB,cAAc,IACbA,cAAc,CAACiB,GAAf,CAAmB,CAACX,KAAD,EAAQY,KAAR,kBACjB;AAAiB,UAAA,SAAS,EAAC,eAA3B;AAAA,iCACE;AAAA,mCACE;AACE,cAAA,OAAO,EAAE,MAAM;AACbrB,gBAAAA,OAAO,CAACsB,IAAR,CAAc,UAASb,KAAK,CAACc,EAAG,EAAhC;AACD,eAHH;AAAA,sCAKE;AAAM,gBAAA,SAAS,EAAC,UAAhB;AAAA,gCAA6Bd,KAAK,CAACe,QAAnC;AAAA;AAAA;AAAA;AAAA;AAAA,sBALF,eAME;AAAA,gCAAQf,KAAK,CAACC,IAAd;AAAA;AAAA;AAAA;AAAA;AAAA,sBANF,OAM8BD,KAAK,CAACI,QANpC;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF,WAAUQ,KAAV;AAAA;AAAA;AAAA;AAAA,gBADF,CAdJ;AAAA;AAAA;AAAA;AAAA;AAAA,cAjBF;AAAA;AAAA;AAAA;AAAA;AAAA;AALF;AAAA;AAAA;AAAA;AAAA,UADF;AAuDD,CAhGD;;GAAM1B,gB;UAKeD,gB,EACHD,U;;;KANZE,gB;AAkGN,eAAeA,gBAAf","sourcesContent":["import { ModalWrapper, Stores } from \"./styles\";\nimport Modal from \"react-modal\";\nimport React, { Dispatch, SetStateAction, useState } from \"react\";\nimport Button from \"../Button\";\nimport { useHistory } from \"react-router-dom\";\nimport { useStoreRegister } from \"../../providers/store-register\";\nimport \"./styles.css\";\n\ninterface IStores {\n  name: string;\n  address: string;\n  city: string;\n  category: string;\n  cashback: number;\n  working_hours: string;\n  telephone: string;\n  store_img: string;\n  open: string;\n  onSale: string;\n  id: number;\n}\n\ninterface ModalProps {\n  modalIsOpen: boolean;\n  setIsOpen: Dispatch<SetStateAction<boolean>>;\n  openModal: () => void;\n}\n\nconst SearchStoreModal = ({\n  modalIsOpen,\n  setIsOpen,\n  openModal,\n}: ModalProps) => {\n  const { stores } = useStoreRegister();\n  const history = useHistory();\n  const [searchInput, setSearchInput] = useState<string>(\"\");\n  const [filteredStores, setFilteredStores] = useState<IStores[]>(\n    [] as IStores[]\n  );\n\n  const closeModal = () => {\n    setIsOpen(false);\n  };\n\n  const handleModal = () => {\n    searchStores();\n    setSearchInput(\"\");\n  };\n\n  const searchStores = () => {\n    if (searchInput === \"\") return;\n    setFilteredStores([\n      ...filteredStores,\n      ...stores.filter(\n        (store) =>\n          store.name.toLowerCase().includes(searchInput.toLowerCase()) ||\n          store.category.toLowerCase().includes(searchInput.toLowerCase())\n      ),\n    ]);\n    setSearchInput(\"\");\n  };\n\n  const cleanSearch = () => {\n    setFilteredStores([]);\n    closeModal();\n  };\n\n  Modal.setAppElement(\"#root\");\n\n  return (\n    <Modal\n      isOpen={modalIsOpen}\n      onRequestClose={closeModal}\n      className=\"SearchModal\"\n    >\n      <ModalWrapper>\n        <div className=\"modalHeader\">\n          <h3>Encontre lojas por nome ou categoria</h3>\n          <span className=\"closeModal\" onClick={cleanSearch}>\n            X\n          </span>\n          <input\n            placeholder=\"nome da loja ou categoria\"\n            value={searchInput}\n            type=\"text\"\n            onChange={(e: React.ChangeEvent<HTMLInputElement>) =>\n              setSearchInput(e.target.value)\n            }\n          />\n          <Button onClick={handleModal}>Pesquisar</Button>\n          <Button onClick={cleanSearch}>Limpar</Button>\n        </div>\n        <Stores>\n          {filteredStores.length === 0 ? (\n            <h3>\n              Busque por supermercado, farmácia, posto de combustível, roupa,\n              etc\n            </h3>\n          ) : filteredStores.length === 1 ? (\n            <h3>{filteredStores.length} loja encontrada oferece cashback:</h3>\n          ) : (\n            <h3>\n              {filteredStores.length} lojas encontradas oferecem cashback:\n            </h3>\n          )}\n          {filteredStores &&\n            filteredStores.map((store, index) => (\n              <div key={index} className=\"searchWrapper\">\n                <ul>\n                  <li\n                    onClick={() => {\n                      history.push(`/store/${store.id}`);\n                    }}\n                  >\n                    <span className=\"cashback\"> {store.cashback}% -</span>\n                    <span> {store.name}</span> {store.category}\n                  </li>\n                </ul>\n              </div>\n            ))}\n        </Stores>\n      </ModalWrapper>\n    </Modal>\n  );\n};\n\nexport default SearchStoreModal;\n"]},"metadata":{},"sourceType":"module"}