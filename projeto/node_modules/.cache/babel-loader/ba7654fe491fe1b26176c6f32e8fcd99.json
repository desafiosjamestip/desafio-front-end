{"ast":null,"code":"var _jsxFileName = \"/home/pierre/Documentos/projects/Q2/sprint6/icash/src/providers/store-register/index.tsx\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport { createContext, useContext, useState } from \"react\";\nimport toast from \"react-hot-toast\";\nimport api from \"../../services/api\";\nimport { useAuth } from \"../Auth\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst StoreRegisterContext = /*#__PURE__*/createContext({});\nexport const StoreRegisterProvider = ({\n  children\n}) => {\n  _s();\n\n  const [showModalStore, setShowModalStore] = useState(false);\n  const {\n    token\n  } = useAuth();\n\n  const storeRegister = (data, setShowModalStore) => {\n    api.post(\"/stores\", data, {\n      headers: {\n        Authorization: `Bearer ${token}`\n      }\n    }).then(() => {\n      toast.success(\"Loja Cadastrada\");\n      setShowModalStore(false);\n    }).catch(() => toast.error(\"Erro ao cadastrar loja\"));\n  };\n\n  const storeUpdate = (data, setShowModalStore) => {\n    api.patch(\"/stores\", data, {\n      headers: {\n        Authorization: `Bearer ${token}`\n      }\n    }).then(() => {\n      toast.success(\"Dados atualizados\");\n      setShowModalStore(false);\n    }).catch(() => toast.error(\"Erro ao atualizar dados\"));\n  };\n\n  return /*#__PURE__*/_jsxDEV(StoreRegisterContext.Provider, {\n    value: {\n      storeUpdate,\n      storeRegister,\n      setShowModalStore,\n      showModalStore\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 5\n  }, this);\n};\n\n_s(StoreRegisterProvider, \"2CNcg31KHIYR21GuLSa6LsvAbOU=\", false, function () {\n  return [useAuth];\n});\n\n_c = StoreRegisterProvider;\nexport const useStoreRegister = () => {\n  _s2();\n\n  return useContext(StoreRegisterContext);\n};\n\n_s2(useStoreRegister, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\n\nvar _c;\n\n$RefreshReg$(_c, \"StoreRegisterProvider\");","map":{"version":3,"sources":["/home/pierre/Documentos/projects/Q2/sprint6/icash/src/providers/store-register/index.tsx"],"names":["createContext","useContext","useState","toast","api","useAuth","StoreRegisterContext","StoreRegisterProvider","children","showModalStore","setShowModalStore","token","storeRegister","data","post","headers","Authorization","then","success","catch","error","storeUpdate","patch","useStoreRegister"],"mappings":";;;;AAAA,SAASA,aAAT,EAAmCC,UAAnC,EAA+CC,QAA/C,QAA+D,OAA/D;AACA,OAAOC,KAAP,MAAkB,iBAAlB;AACA,OAAOC,GAAP,MAAgB,oBAAhB;AAEA,SAASC,OAAT,QAAwB,SAAxB;;AAmBA,MAAMC,oBAAoB,gBAAGN,aAAa,CACxC,EADwC,CAA1C;AAIA,OAAO,MAAMO,qBAAqB,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAsC;AAAA;;AAGzE,QAAM,CAACC,cAAD,EAAiBC,iBAAjB,IAAsCR,QAAQ,CAAU,KAAV,CAApD;AAEA,QAAM;AAAES,IAAAA;AAAF,MAAYN,OAAO,EAAzB;;AAEA,QAAMO,aAAa,GAAG,CACpBC,IADoB,EAEpBH,iBAFoB,KAGjB;AACHN,IAAAA,GAAG,CACAU,IADH,CACQ,SADR,EACmBD,IADnB,EACyB;AAAEE,MAAAA,OAAO,EAAE;AAAEC,QAAAA,aAAa,EAAG,UAASL,KAAM;AAAjC;AAAX,KADzB,EAEGM,IAFH,CAEQ,MAAM;AACVd,MAAAA,KAAK,CAACe,OAAN,CAAc,iBAAd;AACAR,MAAAA,iBAAiB,CAAC,KAAD,CAAjB;AACD,KALH,EAMGS,KANH,CAMS,MAAMhB,KAAK,CAACiB,KAAN,CAAY,wBAAZ,CANf;AAOD,GAXD;;AAaA,QAAMC,WAAW,GAAG,CAClBR,IADkB,EAElBH,iBAFkB,KAGf;AACHN,IAAAA,GAAG,CACAkB,KADH,CACS,SADT,EACoBT,IADpB,EAC0B;AAAEE,MAAAA,OAAO,EAAE;AAAEC,QAAAA,aAAa,EAAG,UAASL,KAAM;AAAjC;AAAX,KAD1B,EAEGM,IAFH,CAEQ,MAAM;AACVd,MAAAA,KAAK,CAACe,OAAN,CAAc,mBAAd;AACAR,MAAAA,iBAAiB,CAAC,KAAD,CAAjB;AACD,KALH,EAMGS,KANH,CAMS,MAAMhB,KAAK,CAACiB,KAAN,CAAY,yBAAZ,CANf;AAOD,GAXD;;AAaA,sBACE,QAAC,oBAAD,CAAsB,QAAtB;AACE,IAAA,KAAK,EAAE;AAAEC,MAAAA,WAAF;AAAeT,MAAAA,aAAf;AAA8BF,MAAAA,iBAA9B;AAAiDD,MAAAA;AAAjD,KADT;AAAA,cAGGD;AAHH;AAAA;AAAA;AAAA;AAAA,UADF;AAOD,CAxCM;;GAAMD,qB;UAKOF,O;;;KALPE,qB;AA0Cb,OAAO,MAAMgB,gBAAgB,GAAG;AAAA;;AAAA,SAAMtB,UAAU,CAACK,oBAAD,CAAhB;AAAA,CAAzB;;IAAMiB,gB","sourcesContent":["import { createContext, ReactNode, useContext, useState } from \"react\";\nimport toast from \"react-hot-toast\";\nimport api from \"../../services/api\";\nimport { IData } from \"../../types/storeRegister\";\nimport { useAuth } from \"../Auth\";\n\ninterface StoreRegisterProps {\n  children: ReactNode;\n}\n\ninterface StoreRegisterData {\n  storeRegister: (\n    data: IData,\n    setshowModalStore: React.Dispatch<React.SetStateAction<boolean>>\n  ) => void;\n  showModalStore: boolean;\n  setShowModalStore: React.Dispatch<React.SetStateAction<boolean>>;\n  storeUpdate: (\n    data: IData,\n    setshowModalStore: React.Dispatch<React.SetStateAction<boolean>>\n  ) => void;\n}\n\nconst StoreRegisterContext = createContext<StoreRegisterData>(\n  {} as StoreRegisterData\n);\n\nexport const StoreRegisterProvider = ({ children }: StoreRegisterProps) => {\n\n  \n  const [showModalStore, setShowModalStore] = useState<boolean>(false);\n\n  const { token } = useAuth();\n\n  const storeRegister = (\n    data: IData,\n    setShowModalStore: React.Dispatch<React.SetStateAction<boolean>>\n  ) => {\n    api\n      .post(\"/stores\", data, { headers: { Authorization: `Bearer ${token}` } })\n      .then(() => {\n        toast.success(\"Loja Cadastrada\");\n        setShowModalStore(false);\n      })\n      .catch(() => toast.error(\"Erro ao cadastrar loja\"));\n  };\n\n  const storeUpdate = (\n    data: IData,\n    setShowModalStore: React.Dispatch<React.SetStateAction<boolean>>\n  ) => {\n    api\n      .patch(\"/stores\", data, { headers: { Authorization: `Bearer ${token}` } })\n      .then(() => {\n        toast.success(\"Dados atualizados\");\n        setShowModalStore(false);\n      })\n      .catch(() => toast.error(\"Erro ao atualizar dados\"));\n  };\n\n  return (\n    <StoreRegisterContext.Provider\n      value={{ storeUpdate, storeRegister, setShowModalStore, showModalStore }}\n    >\n      {children}\n    </StoreRegisterContext.Provider>\n  );\n};\n\nexport const useStoreRegister = () => useContext(StoreRegisterContext);\n"]},"metadata":{},"sourceType":"module"}