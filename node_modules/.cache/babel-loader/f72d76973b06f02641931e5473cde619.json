{"ast":null,"code":"var _jsxFileName = \"/home/gabriela/james-tip/src/Components/Form/index.tsx\",\n    _s = $RefreshSig$();\n\nimport { useForms } from \"../../Providers/Forms\";\nimport { useState } from \"react\";\nimport Box from \"@mui/material/Box\";\nimport TextField from \"@mui/material/TextField\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Form() {\n  _s();\n\n  const {\n    removeProduct,\n    data,\n    editProduct,\n    setData,\n    id\n  } = useForms();\n\n  const handleSubmit = () => {\n    const newProduct = {\n      name,\n      category,\n      code,\n      provider,\n      value\n    };\n    const newId = data.reduce((acc, item) => item.id >= acc ? item.id + 1 : acc, 1);\n    setData([...data, { ...newProduct,\n      id: newId\n    }]);\n    localStorage.setItem(\"products\", JSON.stringify(newProduct));\n  };\n\n  const [name, setName] = useState(\"\");\n  const [code, setCode] = useState(0);\n  const [category, setCategory] = useState(\"\");\n  const [provider, setProvider] = useState(\"\");\n  const [value, setValue] = useState(0);\n  return /*#__PURE__*/_jsxDEV(Box, {\n    component: \"form\",\n    sx: {\n      \"& .MuiTextField-root\": {\n        m: 1,\n        width: \"25ch\"\n      }\n    },\n    noValidate: true,\n    autoComplete: \"off\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(TextField, {\n        required: true,\n        id: \"outlined-required\",\n        label: \"*Nome\",\n        onChange: e => setName(e.target.value),\n        value: name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        placeholder: \"*C\\xF3digo\",\n        onChange: e => setCode(Number(e.target.value)),\n        value: code\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        placeholder: \"*Categoria\",\n        onChange: e => setCategory(e.target.value),\n        value: category\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        placeholder: \"*Provedor\",\n        onChange: e => setProvider(e.target.value),\n        value: provider\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        placeholder: \"*Valor\",\n        onChange: e => setValue(Number(e.target.value)),\n        value: value\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleSubmit,\n          children: \"Adicionar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card__container\",\n      children: data.map(({\n        id,\n        name,\n        value,\n        provider,\n        code\n      }, index) => {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: value\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\" \", provider]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\" \", code]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => removeProduct(id),\n            children: \"Remover\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 13\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Form, \"Fxrdk6x19d19k17WQR0vMLm+sqQ=\", false, function () {\n  return [useForms];\n});\n\n_c = Form;\nexport default Form;\n\nvar _c;\n\n$RefreshReg$(_c, \"Form\");","map":{"version":3,"sources":["/home/gabriela/james-tip/src/Components/Form/index.tsx"],"names":["useForms","useState","Box","TextField","Form","removeProduct","data","editProduct","setData","id","handleSubmit","newProduct","name","category","code","provider","value","newId","reduce","acc","item","localStorage","setItem","JSON","stringify","setName","setCode","setCategory","setProvider","setValue","m","width","e","target","Number","map","index"],"mappings":"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","sourcesContent":["import { useForms } from \"../../Providers/Forms\";\nimport { useEffect, useState } from \"react\";\nimport Box from \"@mui/material/Box\";\nimport TextField from \"@mui/material/TextField\";\n\ninterface IForms {\n  code: number;\n  category: string;\n  name: string;\n  provider: string;\n  value: number;\n  id: number;\n}\n\nfunction Form() {\n  const { removeProduct, data, editProduct, setData, id } = useForms();\n\n  const handleSubmit = () => {\n    const newProduct = { name, category, code, provider, value };\n    const newId = data.reduce(\n      (acc, item) => (item.id >= acc ? item.id + 1 : acc),\n      1\n    );\n    setData([...data, { ...newProduct, id: newId }]);\n\n    localStorage.setItem(\"products\", JSON.stringify(newProduct));\n  };\n\n  const [name, setName] = useState<string>(\"\");\n  const [code, setCode] = useState<number>(0);\n  const [category, setCategory] = useState<string>(\"\");\n  const [provider, setProvider] = useState<string>(\"\");\n  const [value, setValue] = useState<number>(0);\n\n  return (\n    <Box\n      component=\"form\"\n      sx={{\n        \"& .MuiTextField-root\": { m: 1, width: \"25ch\" },\n      }}\n      noValidate\n      autoComplete=\"off\"\n    >\n      <div>\n        <TextField\n          required\n          id=\"outlined-required\"\n          label=\"*Nome\"\n          onChange={(e) => setName(e.target.value)}\n          value={name}\n        />\n\n        <input\n          type=\"number\"\n          placeholder=\"*Código\"\n          onChange={(e) => setCode(Number(e.target.value))}\n          value={code}\n        ></input>\n        <input\n          placeholder=\"*Categoria\"\n          onChange={(e) => setCategory(e.target.value)}\n          value={category}\n        ></input>\n        <input\n          placeholder=\"*Provedor\"\n          onChange={(e) => setProvider(e.target.value)}\n          value={provider}\n        ></input>\n        <input\n          placeholder=\"*Valor\"\n          onChange={(e) => setValue(Number(e.target.value))}\n          value={value}\n        ></input>\n\n        <div>\n          <button onClick={handleSubmit}>Adicionar</button>\n        </div>\n      </div>\n\n      <div className=\"card__container\">\n        {data.map(({ id, name, value, provider, code }, index) => {\n          return (\n            <div>\n              <h3>{name}</h3>\n              <p>{value}</p>\n              <p> {provider}</p>\n              <p> {code}</p>\n              <button onClick={() => removeProduct(id)}>Remover</button>\n            </div>\n          );\n        })}\n      </div>\n    </Box>\n  );\n}\n\nexport default Form;\n"]},"metadata":{},"sourceType":"module"}