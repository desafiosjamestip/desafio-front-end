{"ast":null,"code":"var _jsxFileName = \"/home/gabriela/james-tip/src/Providers/Forms/index.tsx\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport { createContext, useContext, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst FormsContext = /*#__PURE__*/createContext({});\nexport const FormsProvider = ({\n  children\n}) => {\n  _s();\n\n  const [data, setData] = useState([]);\n  const [id, setId] = useState(0);\n  const [authToken, setAuthToken] = useState(() => localStorage.getItem(\"token\") || \"\");\n\n  const removeProduct = id => {\n    const filtered = data.filter(item => item.id !== id);\n    setData(filtered);\n  };\n\n  const editProduct = id => {\n    const updatedList = data.map((item, index) => {\n      if (id !== index) return item;\n      return { ...item,\n        complete: !item.name\n      };\n    });\n    setData(updatedList);\n  };\n\n  return /*#__PURE__*/_jsxDEV(FormsContext.Provider, {\n    value: {\n      removeProduct,\n      editProduct,\n      data,\n      id\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n};\n\n_s(FormsProvider, \"BaSq53BjBMdqUE3MnW2GBibAV94=\");\n\n_c = FormsProvider;\nexport const useForms = () => {\n  _s2();\n\n  return useContext(FormsContext);\n};\n\n_s2(useForms, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\n\nexport default FormsProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"FormsProvider\");","map":{"version":3,"sources":["/home/gabriela/james-tip/src/Providers/Forms/index.tsx"],"names":["createContext","useContext","useState","FormsContext","FormsProvider","children","data","setData","id","setId","authToken","setAuthToken","localStorage","getItem","removeProduct","filtered","filter","item","editProduct","updatedList","map","index","complete","name","useForms"],"mappings":";;;;AAAA,SAASA,aAAT,EAAwBC,UAAxB,EAAoCC,QAApC,QAAoD,OAApD;;AAyBA,MAAMC,YAAY,gBAAGH,aAAa,CAAC,EAAD,CAAlC;AACA,OAAO,MAAMI,aAAa,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAA0B;AAAA;;AACrD,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBL,QAAQ,CAAkB,EAAlB,CAAhC;AACA,QAAM,CAACM,EAAD,EAAKC,KAAL,IAAcP,QAAQ,CAAS,CAAT,CAA5B;AACA,QAAM,CAACQ,SAAD,EAAYC,YAAZ,IAA4BT,QAAQ,CACxC,MAAMU,YAAY,CAACC,OAAb,CAAqB,OAArB,KAAiC,EADC,CAA1C;;AAIA,QAAMC,aAAa,GAAIN,EAAD,IAAgB;AACpC,UAAMO,QAAQ,GAAGT,IAAI,CAACU,MAAL,CAAaC,IAAD,IAAUA,IAAI,CAACT,EAAL,KAAYA,EAAlC,CAAjB;AACAD,IAAAA,OAAO,CAACQ,QAAD,CAAP;AACD,GAHD;;AAKA,QAAMG,WAAW,GAAIV,EAAD,IAAgB;AAClC,UAAMW,WAAW,GAAGb,IAAI,CAACc,GAAL,CAAS,CAACH,IAAD,EAAOI,KAAP,KAAiB;AAC5C,UAAIb,EAAE,KAAKa,KAAX,EAAkB,OAAOJ,IAAP;AAClB,aAAO,EAAE,GAAGA,IAAL;AAAWK,QAAAA,QAAQ,EAAE,CAACL,IAAI,CAACM;AAA3B,OAAP;AACD,KAHmB,CAApB;AAIAhB,IAAAA,OAAO,CAACY,WAAD,CAAP;AACD,GAND;;AAQA,sBACE,QAAC,YAAD,CAAc,QAAd;AACE,IAAA,KAAK,EAAE;AACLL,MAAAA,aADK;AAGLI,MAAAA,WAHK;AAILZ,MAAAA,IAJK;AAKLE,MAAAA;AALK,KADT;AAAA,cASGH;AATH;AAAA;AAAA;AAAA;AAAA,UADF;AAaD,CAjCM;;GAAMD,a;;KAAAA,a;AAmCb,OAAO,MAAMoB,QAAQ,GAAG;AAAA;;AAAA,SAAMvB,UAAU,CAACE,YAAD,CAAhB;AAAA,CAAjB;;IAAMqB,Q;;AAEb,eAAepB,aAAf","sourcesContent":["import { createContext, useContext, useState } from \"react\";\nimport { ReactNode } from \"react\";\n\ninterface IForms {\n  children: ReactNode;\n}\n\ninterface IFormsProps {\n  handleSubmit: () => void;\n  removeProduct: (id: number) => void;\n  editProduct: (id: number) => void;\n  id: number;\n  data: IFormsContext[];\n  setData: React.Dispatch<React.SetStateAction<[]>>;\n}\n\ninterface IFormsContext {\n  code: number;\n  category: string;\n  name: string;\n  provider: string;\n  value: number;\n  id: number;\n}\n\nconst FormsContext = createContext({} as IFormsProps);\nexport const FormsProvider = ({ children }: IForms) => {\n  const [data, setData] = useState<IFormsContext[]>([] as IFormsContext[]);\n  const [id, setId] = useState<number>(0);\n  const [authToken, setAuthToken] = useState(\n    () => localStorage.getItem(\"token\") || \"\"\n  );\n\n  const removeProduct = (id: number) => {\n    const filtered = data.filter((item) => item.id !== id);\n    setData(filtered);\n  };\n\n  const editProduct = (id: number) => {\n    const updatedList = data.map((item, index) => {\n      if (id !== index) return item;\n      return { ...item, complete: !item.name };\n    });\n    setData(updatedList);\n  };\n\n  return (\n    <FormsContext.Provider\n      value={{\n        removeProduct,\n\n        editProduct,\n        data,\n        id,\n      }}\n    >\n      {children}\n    </FormsContext.Provider>\n  );\n};\n\nexport const useForms = () => useContext(FormsContext);\n\nexport default FormsProvider;\n"]},"metadata":{},"sourceType":"module"}